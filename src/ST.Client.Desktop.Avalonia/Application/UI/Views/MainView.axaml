<UserControl xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="800"
        xmlns:pages="clr-namespace:System.Application.UI.Views.Pages"
        xmlns:gif="using:AvaloniaGif"
        xmlns:vm="using:System.Application.UI.ViewModels"
        xmlns:service="using:System.Application.Services"
        xmlns:resx="using:System.Application.UI.Resx"
        xmlns:ms="using:System.Application.Settings"
        xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
        xmlns:ui="using:FluentAvalonia.UI.Controls"
        xmlns:app="using:System.Application"
        x:Class="System.Application.UI.Views.MainView"
        FontFamily="{Binding Source={x:Static ms:UISettings.FontName},Path=Value, Mode=OneWay,Converter={StaticResource NameToFontFamilyConverter}}"
        x:DataType="vm:MainWindowViewModel"
        x:CompileBindings="True">
  <Panel>
    <!--Title-->
    <controls:TitleBar x:Name="TitleBarHost" IsVisibleBackground="False"/>

    <!--Background-->
    <DockPanel x:Name="Background" Margin="{StaticResource TitleBarAfterMargin}">
      <ExperimentalAcrylicBorder x:Name="NavBarBackground"
                                 DockPanel.Dock="Left"
                                 HorizontalAlignment="Left"
                                 Width="240">
        <ExperimentalAcrylicBorder.Material>
          <ExperimentalAcrylicMaterial TintColor="{DynamicResource ThemeColorKey}"
                                       TintOpacity="1"
                                       MaterialOpacity="{ReflectionBinding Value,Source={x:Static ms:UISettings.AcrylicOpacity},Mode=OneWay}"/>
        </ExperimentalAcrylicBorder.Material>
      </ExperimentalAcrylicBorder>
      <ExperimentalAcrylicBorder DockPanel.Dock="Right">
        <ExperimentalAcrylicBorder.Material>
          <ExperimentalAcrylicMaterial TintColor="{DynamicResource ThemeColorKey}"
                                       TintOpacity="1"
                                       MaterialOpacity="{ReflectionBinding Value,Source={x:Static ms:UISettings.AcrylicOpacity},Mode=OneWay}"/>
        </ExperimentalAcrylicBorder.Material>
      </ExperimentalAcrylicBorder>
      <!--<ExperimentalAcrylicBorder DockPanel.Dock="Right">
        <ExperimentalAcrylicBorder.Material>
          <ExperimentalAcrylicMaterial TintColor="{DynamicResource BackgroundColorKey}"/>
        </ExperimentalAcrylicBorder.Material>
      </ExperimentalAcrylicBorder>-->
    </DockPanel>

    <!--Content-->
    <ui:NavigationView x:Name="NavigationView"
                       Classes="NavBar"
                       Margin="{StaticResource TitleBarAfterMargin}"
                       PaneDisplayMode="Left"
                       IsPaneOpen="{ReflectionBinding Source={x:Static ms:UISettings.MainMenuExpandedState},Path=Value,Mode=TwoWay}"
                       MenuItems="{Binding TabItems}"
                       FooterMenuItems="{Binding FooterTabItems}"
                       IsBackEnabled="{Binding #frame.CanGoBack}"
                       SelectedItem="{Binding SelectedItem}">
      <!--<ui:NavigationView.PaneHeader>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="110" VerticalAlignment="Top">
          <Image Source="/Application/UI/Assets/Icon.ico" Height="64" Width="64" VerticalAlignment="Center" Margin="-8,0,0,0"/>
          <Label Content="{ReflectionBinding Path=Title}" Foreground="{DynamicResource HighlightForegroundBrushKey}" VerticalContentAlignment="Center" FontSize="20" Margin="8,0,0,0"/>
        </StackPanel>
      </ui:NavigationView.PaneHeader>-->

      <ui:NavigationView.Content>
        <ui:Frame x:Name="frame"
                  DataContext="{Binding SelectedItem}"
                  Margin="-10 0 0 0">
          <!--<ui:Frame.DataTemplates>
            <DataTemplate DataType="vm:ProxyScriptManagePageViewModel">
              <pages:ProxyScriptManagePage/>
            </DataTemplate>
            <DataTemplate DataType="vm:AboutPageViewModel">
              <pages:AboutPage/>
            </DataTemplate>
            <DataTemplate DataType="vm:SettingsPageViewModel">
              <pages:SettingsPage/>
            </DataTemplate>
            <DataTemplate DataType="vm:StartPageViewModel">
              <pages:StartPage/>
            </DataTemplate>
            <DataTemplate DataType="vm:SteamAccountPageViewModel">
              <pages:SteamAccountPage/>
            </DataTemplate>
            <DataTemplate DataType="vm:GameListPageViewModel">
              <pages:GameListPage/>
            </DataTemplate>
            <DataTemplate DataType="vm:CommunityProxyPageViewModel">
              <pages:CommunityProxyPage/>
            </DataTemplate>
            <DataTemplate DataType="vm:LocalAuthPageViewModel">
              <pages:LocalAuthPage/>
            </DataTemplate>
            <DataTemplate DataType="vm:GameRelatedPageViewModel">
              <pages:GameRelatedPage/>
            </DataTemplate>
            <DataTemplate DataType="vm:ArchiSteamFarmPlusPageViewModel">
              <pages:ArchiSteamFarmPlusPage/>
            </DataTemplate>
          </ui:Frame.DataTemplates>-->
        </ui:Frame>
      </ui:NavigationView.Content>

      <ui:NavigationView.PaneCustomContent>
        <ui:Button Margin="6"
                   Padding="10 5"
                   BorderThickness="0"
                   Background="Transparent"
                   HorizontalContentAlignment="Stretch"
                   HorizontalAlignment="Stretch"
                   Command="{Binding OpenUserMenu}">
          <DockPanel
                      HorizontalAlignment="Stretch">
            <!--<Image x:Name="avatar" Source="/Application/UI/Assets/Icon.ico" Height="64" Width="64"/>
            <Label Content="{ReflectionBinding Path=Title}" Foreground="{DynamicResource HighlightForegroundBrushKey}" VerticalContentAlignment="Center" FontSize="18" Margin="8,0,0,0"/>-->
            <Border x:Name="avatar"
                    BorderThickness="0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Height="64"
                    Width="64"
                    ClipToBounds="True"
                    CornerRadius="64">
              <gif:Image2
                     Source="{ReflectionBinding Path=AvatarPath, Source={x:Static service:UserService.Current},Mode=OneWay,Converter={StaticResource BitmapAssetValueConverter}}"
                     Stretch="Uniform"
                     DecodeWidth="64"
                     FallbackSource="avares://System.Application.SteamTools.Client.Avalonia/Application/UI/Assets/AppResources/avatar.jpg">
              </gif:Image2>
            </Border>
            <StackPanel Spacing="5" VerticalAlignment="Center">
              <TextBlock Text="{ReflectionBinding Path=Res.User_UnLogin,Mode=OneWay,Source={x:Static resx:R.Current}}"
                        IsVisible="{ReflectionBinding Path=User,Mode=OneWay,Source={x:Static service:UserService.Current},Converter={StaticResource IsNullConverter}}"
                        Foreground="{DynamicResource HighlightForegroundBrushKey}"
                        Classes="h7"
                        VerticalAlignment="Center"/>
              <StackPanel IsVisible="{ReflectionBinding Path=User,Mode=OneWay,Source={x:Static service:UserService.Current},Converter={StaticResource IsNullConverter},ConverterParameter=invert}">
                <controls:ScrollingTextBlock Text="{ReflectionBinding Path=User.NickName,Mode=OneWay,Source={x:Static service:UserService.Current}}"
                       Foreground="{DynamicResource HighlightForegroundBrushKey}"
                       Classes="h5"
                       VerticalAlignment="Center"/>
                <Border IsVisible="{ReflectionBinding Path=User.UserType,Mode=OneWay,Source={x:Static service:UserService.Current},Converter={StaticResource EnumEqualValueConverter},ConverterParameter={x:Static app:UserType.Sponsor}}">
                  <TextBlock Text="{ReflectionBinding Path=Res.User_Sponsor,Mode=OneWay,Source={x:Static resx:R.Current},StringFormat={}ðŸ’– {0}}"
                             Classes="h8"/>
                </Border>
                <!--<TextBlock Text="{ReflectionBinding Path=User.LevelStr,Mode=OneWay,Source={x:Static service:UserService.Current}}"
                       Foreground="{DynamicResource InactiveForegroundBrushKey}"
                       Classes="h8"/>-->
              </StackPanel>
              <!--<TextBlock Text="{ReflectionBinding Path=PhoneNumber,Mode=OneWay,Source={x:Static service:UserService.Current}}"
                        IsVisible="{ReflectionBinding Path=User.HasPhoneNumber,Mode=OneWay,Source={x:Static service:UserService.Current}}"
                        Foreground="{DynamicResource InactiveForegroundBrushKey}"
                        FontSize="12"
                        VerticalAlignment="Center"/>-->
            </StackPanel>

          </DockPanel>
          <ui:Button.Flyout>
            <Flyout Placement="RightEdgeAlignedTop" FlyoutPresenterClasses="NoPadding">
              <pages:UserItem/>
            </Flyout>
            <!--<ui:MenuFlyout Placement="RightEdgeAlignedTop">
              <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.RefreshAvatar,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                 Command="{ReflectionBinding Path=RefreshUserAvatarAsync,Source={x:Static service:UserService.Current}}"/>
              <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.UserProfile,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                 Command="{ReflectionBinding Path=ShowWindow,Source={x:Static service:UserService.Current}}"
                                 CommandParameter="UserProfile"/>
              -->
            <!--<ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.NotificationChannelType_Name_Announcement,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                 Command="{ReflectionBinding Path=ShowWindow,Source={x:Static service:UserService.Current}}"
                                 CommandParameter="Notice"/>-->
            <!--
              <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.User_ChangePhoneNum,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                 IsVisible="{ReflectionBinding Path=HasPhoneNumber,Source={x:Static service:UserService.Current}}}"
                                 Command="{ReflectionBinding Path=ShowWindow,Source={x:Static service:UserService.Current}}"
                                 CommandParameter="ChangeBindPhoneNumber"/>
              <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.User_BindPhoneNum,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                 IsVisible="{ReflectionBinding Path=!HasPhoneNumber,Source={x:Static service:UserService.Current}}}"
                                 Command="{ReflectionBinding Path=ShowWindow,Source={x:Static service:UserService.Current}}"
                                 CommandParameter="BindPhoneNumber"/>
              <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.SignOut,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                 Command="{ReflectionBinding Path=SignOut,Source={x:Static service:UserService.Current}}"/>
            </ui:MenuFlyout>-->
          </ui:Button.Flyout>
        </ui:Button>

      </ui:NavigationView.PaneCustomContent>

      <ui:NavigationView.MenuItemTemplate>
        <DataTemplate DataType="{x:Type vm:TabItemViewModel}">
          <ui:NavigationViewItem>
            <ui:NavigationViewItem.Content>
              <!--<DockPanel>
                <ui:ImageIcon DockPanel.Dock="Left">
                  <DrawingImage Drawing="{Binding IconKey,Converter={StaticResource DrawingKeyValueConverter}}"/>
                </ui:ImageIcon>-->
              <controls:ScrollingTextBlock Text="{Binding Name}"
                                           HorizontalAlignment="Stretch"
                                           IsVisible="{ReflectionBinding Path=!!IsPaneOpen,ElementName=$parent[ui|NavigationView]}"/>
              <!--</DockPanel>-->
            </ui:NavigationViewItem.Content>
            <ui:NavigationViewItem.Icon>
              <!--<ui:PathIcon Data="{Binding IconKey,Converter={StaticResource DrawingKeyValueConverter}}"/>-->
              <ui:BitmapIcon UriSource="{Binding IconSource}"
                             HorizontalAlignment="Center"
                             Width="26" Height="26"/>
              <!--<ui:ImageIcon Margin="3 0 0 0"
                            Width="16" Height="16">
                            <DrawingImage Drawing="{Binding IconKey,Converter={StaticResource DrawingKeyValueConverter}}"/>
              </ui:ImageIcon>-->
            </ui:NavigationViewItem.Icon>
          </ui:NavigationViewItem>
        </DataTemplate>
      </ui:NavigationView.MenuItemTemplate>
    </ui:NavigationView>

    <!--<controls:AdDialog HorizontalAlignment="Right"
                       VerticalAlignment="Bottom"
                       SupportClose="True"
                       Width="600"
                       Height="200"/>-->

    <!--Toast-->
    <controls:ToastMessage />
  </Panel>
</UserControl>
