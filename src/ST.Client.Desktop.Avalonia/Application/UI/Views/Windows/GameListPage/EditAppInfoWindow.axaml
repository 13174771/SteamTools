<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="600"
        Width="500" Height="600"
        x:Class="System.Application.UI.Views.Windows.EditAppInfoWindow"
        xmlns:resx="using:System.Application.UI.Resx"
        xmlns:vm="using:System.Application.UI.ViewModels"
        xmlns:models="using:System.Application.Models"
        xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
        xmlns:ms="using:System.Application.Settings"
        xmlns:ui="using:FluentAvalonia.UI.Controls"
        xmlns:gif="using:AvaloniaGif"
        x:Name="u"
        Background="Transparent"
        x:DataType="vm:EditAppInfoWindowViewModel"
        x:CompileBindings="True">
  <Panel>
    <controls:TitleBar DockPanel.Dock="Top" />
    <Grid Margin="0 35 0 0"
          RowDefinitions="*,Auto">
      <Grid.Styles>
        <Style Selector="TextBox">
          <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
      </Grid.Styles>
      <TabControl Classes="flat"
                  DockPanel.Dock="Top">
        <TabItem Header="信息">
          <ScrollViewer>
            <StackPanel Classes="Settings">

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="AppId"/>
                  <TextBlock Classes="right"
                             Text="{Binding App.AppId}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="名称"/>
                  <TextBox Text="{Binding App.Name}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="排序标题"/>
                  <TextBox Text="{Binding App.SortAs}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="开发商"/>
                  <TextBox Text="{Binding App.Developer}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="发行商"/>
                  <TextBox Text="{Binding App.Publisher}"/>
                </DockPanel>
              </Border>

              <!--<Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="发布日期"/>
                  <TextBox Text="{Binding App.SteamReleaseDate}"/>
                </DockPanel>
              </Border>-->

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="支持系统"/>
                  <TextBlock Classes="right"
                             Text="{Binding App.OSList}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item" IsVisible="{Binding App.IsInstalled}">
                <DockPanel>
                  <TextBlock Text="磁盘占用"/>
                  <TextBlock Classes="right"
                             Text="{ReflectionBinding App.SizeOnDisk,Converter={StaticResource StringFormatConverter},ConverterParameter=size}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item" IsVisible="{Binding App.IsInstalled}">
                <DockPanel>
                  <TextBlock Text="安装路径"/>
                  <TextBlock Classes="right"
                             Text="{ReflectionBinding App.InstalledDir}"/>
                  <!--<Button Classes="Hyperlink"
                          Content="{ReflectionBinding App.InstalledDir}"/>-->
                </DockPanel>
              </Border>

              <Border Classes="Item" IsVisible="{Binding App.IsInstalled}">
                <DockPanel>
                  <TextBlock Text="最后更新时间"/>
                  <TextBlock Classes="right"
                             Text="{Binding App.LastUpdated,StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"/>
                </DockPanel>
              </Border>

            </StackPanel>
          </ScrollViewer>
        </TabItem>

        <TabItem Header="媒体">
          <Panel>
            <ui:ContentDialog x:Name="SteamGridDBDialog"
                              MaxWidth="{ReflectionBinding #u.Width}"
                        Title="SteamGridDB Image"
                        IsVisible="False"
                        PrimaryButtonText="{ReflectionBinding Path=Res.Confirm,Mode=OneWay,Source={x:Static resx:R.Current}}"
                        CloseButtonText="{ReflectionBinding Path=Res.Cancel,Mode=OneWay,Source={x:Static resx:R.Current}}"
                        DefaultButton="Primary">
              <ui:ContentDialog.Content>
                <Panel>
                  <ProgressBar
                          Width="60"
                          Height="60"
                          Classes="Circle"
                          IsIndeterminate="True"
                          Orientation="Vertical"
                          IsVisible="{Binding IsLoadingSteamGrid}"/>
                  <TextBlock Text="未能从 SteamGridDB 获取到图片"
                             IsVisible="{Binding IsSteamGridEmpty}"/>
                  <ListBox Items="{Binding SteamGridItems}"
                           SelectedItem="{Binding SelectGrid}"
                           ScrollViewer.HorizontalScrollBarVisibility="Auto"
                           ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    <ListBox.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Spacing="8" />
                      </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                      <DataTemplate DataType="{x:Type models:SteamGridItem}">
                        <StackPanel Margin="0 0 0 15" Spacing="6">
                          <Panel Width="150"
                                 MinHeight="150">
                            <gif:Image2 Width="150"
                                        DecodeWidth="150"
                                        Stretch="Uniform"
                                        Source="{Binding Thumb}" />
                            <Panel.ContextFlyout>
                              <MenuFlyout>
                                <MenuItem Header="下载图片"/>
                                <MenuItem Header="在浏览器中打开原图"/>
                              </MenuFlyout>
                            </Panel.ContextFlyout>
                          </Panel>
                          <!--<TextBlock MaxWidth="150" 
                                   TextWrapping="Wrap" 
                                   Text="{Binding Style}" 
                                   FontSize="12"
                                   FontWeight="Bold" />-->
                          <TextBlock MaxWidth="150"
                                     TextWrapping="Wrap"
                                     TextTrimming="CharacterEllipsis"
                                     ToolTip.Tip="{Binding Author.Name}"
                                     Text="{Binding Author.Name}"
                                     FontSize="10"
                                     Foreground="{DynamicResource InactiveForegroundBrushKey}" />
                        </StackPanel>
                      </DataTemplate>
                    </ListBox.ItemTemplate>
                  </ListBox>
                </Panel>
              </ui:ContentDialog.Content>
            </ui:ContentDialog>
            <ScrollViewer>
              <StackPanel Classes="Settings">
                <Border Classes="Item">
                  <DockPanel>
                    <StackPanel Margin="0">
                      <TextBlock Text="封面"/>
                      <Button Classes="Hyperlink"
                              FontSize="12"
                              Content="从 SteamGridDB 获取"
                              Tag="{x:Static models:SteamGridItemType.Grid}"
                              Click="ShowGridDialog_Click"/>

                      <TextBlock Classes="prompt h8"
                                 Text="建议的分辨率"/>
                      <TextBlock Classes="prompt h8"
                                 Text="300 x 450 px"/>
                    </StackPanel>

                    <controls:CustomFilePicker Margin="50 0 0 0"
                                               FileName="{Binding App.EditLibraryGridStream,Mode=TwoWay}"
                                               HorizontalAlignment="Right">
                      <gif:Image2 DecodeWidth="135"
                                  Source="{Binding App.EditLibraryGridStream}"/>
                    </controls:CustomFilePicker>
                  </DockPanel>
                </Border>
                <Border Classes="Item">
                  <DockPanel>
                    <StackPanel Margin="0">
                      <TextBlock Text="背景"/>
                      <Button Classes="Hyperlink"
                              FontSize="12"
                              Content="从 SteamGridDB 获取"
                              Tag="{x:Static models:SteamGridItemType.Hero}"
                              Click="ShowGridDialog_Click"/>

                      <TextBlock Classes="prompt h8"
                                 Text="建议的分辨率"/>
                      <TextBlock Classes="prompt h8"
                                 Text="1920 x 620 px"/>
                    </StackPanel>

                    <controls:CustomFilePicker Margin="50 0 0 0"
                                               FileName="{Binding App.EditLibraryHeroStream,Mode=TwoWay}"
                                               HorizontalAlignment="Right">
                      <gif:Image2 DecodeHeight="120"
                                  Stretch="UniformToFill"
                                  Source="{Binding App.EditLibraryHeroStream}"/>
                    </controls:CustomFilePicker>
                  </DockPanel>
                </Border>
                <Border Classes="Item">
                  <DockPanel>
                    <StackPanel Margin="0">
                      <TextBlock Text="图标"/>
                      <Button Classes="Hyperlink"
                              FontSize="12"
                              Content="从 SteamGridDB 获取"
                              Tag="{x:Static models:SteamGridItemType.Logo}"
                              Click="ShowGridDialog_Click"/>

                      <TextBlock Classes="prompt h8"
                                 Text="建议的分辨率"/>
                      <TextBlock Classes="prompt h8"
                                 Text="120 x 120 px"/>
                    </StackPanel>

                    <controls:CustomFilePicker Margin="50 0 0 0"
                                               FileName="{Binding App.EditLibraryLogoStream,Mode=TwoWay}"
                                               HorizontalAlignment="Right">
                      <gif:Image2 DecodeWidth="220"
                                  Source="{Binding App.EditLibraryLogoStream}"/>
                    </controls:CustomFilePicker>
                  </DockPanel>
                </Border>

              </StackPanel>
            </ScrollViewer>
          </Panel>
        </TabItem>

        <TabItem Header="启动项" IsVisible="{Binding App.IsInstalled}">
          <ScrollViewer>
            <StackPanel Classes="Settings">
              <ItemsRepeater Items="{Binding App.LaunchItems}">
                <ItemsRepeater.Layout>
                  <StackLayout Orientation="Vertical" Spacing="10"/>
                </ItemsRepeater.Layout>
                <ItemsRepeater.ItemTemplate>
                  <DataTemplate DataType="{x:Type models:SteamAppLaunchItem}">
                    <Border Classes="Item">
                      <StackPanel Spacing="5">
                        <DockPanel>
                          <Label Content="Label"/>
                          <TextBox Text="{Binding Label}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="Executable"/>
                          <TextBox Text="{Binding Executable}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="Arguments"/>
                          <TextBox Text="{Binding Arguments}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="WorkingDir"/>
                          <TextBox Text="{Binding WorkingDir}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="Platform"/>
                          <ui:ComboBox IsEditable="True"
                                       Text="{Binding Platform,Mode=TwoWay}">
                            <ui:ComboBoxItem Content="windows"/>
                            <ui:ComboBoxItem Content="linux"/>
                            <ui:ComboBoxItem Content="macos"/>
                          </ui:ComboBox>
                        </DockPanel>

                        <Grid ColumnDefinitions="*,*,*">
                          <ui:Button HorizontalAlignment="Stretch"
                                     HorizontalContentAlignment="Center"
                                     Margin="5"
                                     Content="上移"
                                     Command="{ReflectionBinding #u.DataContext.UpLaunchItem}"
                                     CommandParameter="{Binding}"
                                     Cursor="Hand" />
                          <ui:Button HorizontalAlignment="Stretch"
                                     HorizontalContentAlignment="Center"
                                     Grid.Column="1"
                                     Margin="5"
                                     Content="下移"
                                     Command="{ReflectionBinding #u.DataContext.DownLaunchItem}"
                                     CommandParameter="{Binding}"
                                     Cursor="Hand" />
                          <ui:Button HorizontalAlignment="Stretch"
                                     HorizontalContentAlignment="Center"
                                     Grid.Column="2"
                                     Margin="5"
                                     Content="删除"
                                     Command="{ReflectionBinding #u.DataContext.DeleteLaunchItem}"
                                     CommandParameter="{Binding}"
                                     Cursor="Hand" />
                        </Grid>
                      </StackPanel>
                    </Border>
                  </DataTemplate>
                </ItemsRepeater.ItemTemplate>
              </ItemsRepeater>
              <Border Classes="Item">
                <ui:Button HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Command="{ReflectionBinding AddLaunchItem}"
                           Cursor="Hand">
                  <ui:SymbolIcon Symbol="Add"
                                 Margin="0 20"
                                 FontSize="32"/>
                </ui:Button>
              </Border>
            </StackPanel>
          </ScrollViewer>

        </TabItem>

        <!--<TabItem Header="DLC">

          
        </TabItem>-->
      </TabControl>

      <StackPanel DockPanel.Dock="Bottom"
                  Margin="10"
                  Spacing="10"
                  Height="35"
                  Grid.Row="1"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Orientation="Horizontal">
        <StackPanel.Styles>
          <Style Selector="Button.DialogButton">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="45 0" />
            <Setter Property="Margin" Value="1" />
          </Style>
        </StackPanel.Styles>
        <Button Classes="DialogButton"
                Command="{ReflectionBinding CancelEditAppInfo}"
                IsDefault="False"
                Content="{ReflectionBinding Path=Res.Reset,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
        <Button Classes="DialogButton"
                Command="{ReflectionBinding CancelEditAppInfo}"
                IsDefault="False"
                Content="{ReflectionBinding Path=Res.Cancel,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
        <Button Classes="action DialogButton" 
                IsDefault="False"
                Command="{ReflectionBinding SaveEditAppInfo}"
                Content="{ReflectionBinding Path=Res.Save,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
      </StackPanel>
    </Grid>

    <controls:ToastMessage/>
  </Panel>
</Window>
