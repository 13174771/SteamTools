<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        Width="600" Height="450"
        x:Class="System.Application.UI.Views.Windows.IdleAppWindow"
        xmlns:resx="clr-namespace:System.Application.UI.Resx;assembly=System.Application.SteamTools.Client.Desktop"
        xmlns:vm="clr-namespace:System.Application.UI.ViewModels;assembly=System.Application.SteamTools.Client.Desktop"
        xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
        xmlns:ms="clr-namespace:System.Application.Models.Settings;assembly=System.Application.SteamTools.Client.Desktop"
        FontFamily="{Binding Source={x:Static ms:UISettings.FontName},Path=Value, Mode=OneWay,Converter={StaticResource NameToFontFamilyConverter}}"
        Background="Transparent"
        xmlns:gif="clr-namespace:AvaloniaGif;assembly=AvaloniaGif"
        xmlns:i="using:Avalonia.Xaml.Interactivity"
        xmlns:service="clr-namespace:System.Application.Services;assembly=System.Application.SteamTools.Client.Desktop"
        xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="30"
        Title="{Binding Title}"
        x:DataType="vm:IdleAppWindowViewModel"
        x:CompileBindings="True">
  <Panel>
    <controls:TitleBar></controls:TitleBar>
    <DockPanel Grid.Column="1" Grid.RowSpan="2"  Margin="0 30 0 0">
      <Border  DockPanel.Dock="Top" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1"  Classes="paper" Background="{DynamicResource ThemeBrushKey}" Padding="10" Margin="20 20 20 0">
        <DockPanel>
          <StackPanel Orientation="Horizontal" Spacing="8" HorizontalAlignment="Left">

            <ToggleButton Background="Transparent"
                                   Cursor="Hand"
                                   IsChecked="{Binding RunState,Mode=TwoWay}"
                                   ToolTip.Tip="{ReflectionBinding Path=Res.GameList_OnlyInstalled,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <PathIcon Data="{StaticResource PlayCircleDrawing}" />
            </ToggleButton>

            <Button Background="Transparent" Cursor="Hand"
                    Command="{ReflectionBinding RefreshScriptButton}"
                    ToolTip.Tip="{ReflectionBinding Path=Res.Refresh,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <PathIcon Width="16"  Data="{StaticResource RefreshDrawing}" />
            </Button>

          </StackPanel>
          <Button Background="Transparent" Cursor="Hand" HorizontalAlignment="Right"
                 Command="{ReflectionBinding RefreshScriptButton}"
                 ToolTip.Tip="{ReflectionBinding Path=Res.Refresh,Mode=OneWay,Source={x:Static resx:R.Current}}">
            <PathIcon Width="16"  Data="{StaticResource DeleteDrawing}" />
          </Button>
        </DockPanel>
      </Border>
      <ScrollViewer  HorizontalScrollBarVisibility="Disabled"
                    VerticalScrollBarVisibility="Auto"
                  Padding="20">
        <StackPanel>
          <ItemsRepeater Items="{Binding IdleGameList}">
            <ItemsRepeater.Layout>
              <UniformGridLayout ItemsJustification="SpaceEvenly" MinRowSpacing="10" MinColumnSpacing="20" MaximumRowsOrColumns="10" ItemsStretch="Fill" />
            </ItemsRepeater.Layout>
            <ItemsRepeater.ItemTemplate>
              <DataTemplate>
                <StackPanel Spacing="8">
                  <Border DockPanel.Dock="Top" Classes="paper" Width="120"  x:Name="card">

                    <i:Interaction.Behaviors>
                      <ia:EventTriggerBehavior EventName="PointerEnter" SourceObject="{ReflectionBinding #card}">
                        <ia:ChangePropertyAction TargetObject="{ReflectionBinding #item_box}" PropertyName="IsVisible" Value="True"/>
                      </ia:EventTriggerBehavior>
                      <ia:EventTriggerBehavior EventName="PointerLeave" SourceObject="{ReflectionBinding #card}">
                        <ia:ChangePropertyAction TargetObject="{ReflectionBinding #item_box}" PropertyName="IsVisible" Value="False"/>
                      </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <Panel x:Name="app" Width="{ReflectionBinding $parent.Width}">
                      <gif:Image2 x:Name="library"
                                              Stretch="UniformToFill"
                                              DecodeWidth="{ReflectionBinding $parent.Width}"
                                              Source="{Binding LibraryLogoStream^}">

                      </gif:Image2>
                      <Image Source="avares://System.Application.SteamTools.Client.Desktop.Avalonia/Application/UI/Assets/AppResources/Placeholders/0.png"
                             Stretch="UniformToFill"
                             IsVisible="{Binding LibraryLogoStream^,Converter={StaticResource IsNullConverter}}">
                      </Image>
                      <TextBlock
                        Text="{Binding DisplayName}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        TextWrapping="WrapWithOverflow"
                        FontSize="20"
                        Foreground="{DynamicResource HighlightForegroundBrushKey}"
                        IsVisible="{Binding LibraryLogoStream^,Converter={StaticResource IsNullConverter}}"/>
                      <Panel Background="{DynamicResource ThemeBrushKey}" IsVisible="False" Opacity="0.8" x:Name="item_box">
                        <Button Classes="flatbutton plain" x:Name="runstop_btn"
                                Background="Transparent"
                                Cursor="Hand"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                            
                         ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_DeleteUser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                         Command="{ReflectionBinding #u.DataContext.DeleteUserButton_Click}"
                         CommandParameter="{Binding}">
                          <PathIcon Width="48" Height="48" Data="{DynamicResource PauseCircleDrawing}">
                          </PathIcon>
                        </Button>
                        <Button Classes="flatbutton" x:Name="delete_btn"
                                Background="Transparent"
                                Cursor="Hand" HorizontalAlignment="Right"
                                Margin="0,0,0,150"
                          ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_DeleteUser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                          Command="{ReflectionBinding #u.DataContext.DeleteUserButton_Click}"
                          CommandParameter="{Binding}">
                          <PathIcon Width="10" Data="{DynamicResource CloseDrawing}">
                          </PathIcon>
                        </Button>
                      </Panel>

                    </Panel>
                  </Border>

                  <controls:ScrollingTextBlock Width="{ReflectionBinding #app.Width}" Text="{Binding DisplayName}" FontSize="12" FontWeight="Bold" Foreground="{DynamicResource HighlightForegroundBrushKey}"/>
                  <controls:ScrollingTextBlock Width="{ReflectionBinding #app.Width}" Text="{Binding AppId}" FontSize="10" Foreground="{DynamicResource InactiveForegroundBrushKey}" />
                </StackPanel>
              </DataTemplate>
            </ItemsRepeater.ItemTemplate>
          </ItemsRepeater>
        </StackPanel>

      </ScrollViewer>
    </DockPanel>

  </Panel>
</Window>

<!--IsVisible="{Binding LibraryLogoStream^,Converter={StaticResource IsNullConverter}}"-->
<!--<ItemsControl Items="{Binding IdleGameList}">
  <ItemsControl.ItemTemplate>
    <DataTemplate>
      <StackPanel>
        <DockPanel Margin="0 10">
          <TextBlock Text="{Binding Value}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"></TextBlock>
          <TextBlock Text="{Binding Key}" HorizontalAlignment="Right"
                       VerticalAlignment="Center"></TextBlock>
        </DockPanel>
        <Separator Classes="Separator"  />
      </StackPanel>
    </DataTemplate>
  </ItemsControl.ItemTemplate>
</ItemsControl>-->
