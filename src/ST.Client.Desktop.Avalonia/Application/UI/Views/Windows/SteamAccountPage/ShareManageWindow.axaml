<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        Width="600" Height="450"
        x:Class="System.Application.UI.Views.Windows.ShareManageWindow"
        xmlns:resx="using:System.Application.UI.Resx"
        xmlns:vm="using:System.Application.UI.ViewModels"
        xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
        xmlns:ms="using:System.Application.Settings"
        xmlns:gif="using:AvaloniaGif"
        xmlns:i="using:Avalonia.Xaml.Interactivity"
        xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
        xmlns:ui="using:FluentAvalonia.UI.Controls"
        FontFamily="{Binding Source={x:Static ms:UISettings.FontName},Path=Value, Mode=OneWay,Converter={StaticResource NameToFontFamilyConverter}}"
        Background="Transparent"
        ExtendClientAreaTitleBarHeightHint="30"
        x:Name="u"
        Title="{Binding Title}"
        x:DataType="vm:ShareManageViewModel"
        x:CompileBindings="True">
  <Panel>
    <controls:TitleBar></controls:TitleBar>
    <Menu Classes="BarMenu">
      <MenuItem Command="{ReflectionBinding About_Click}"
                ToolTip.Tip="{ReflectionBinding Path=Res.Helper,Mode=OneWay,Source={x:Static resx:R.Current}}">
        <MenuItem.Header>
          <ui:SymbolIcon Symbol="Help" FontSize="18"/>
        </MenuItem.Header>
      </MenuItem>
      <MenuItem Command="{ReflectionBinding Refresh_Click}"
                ToolTip.Tip="{ReflectionBinding Path=Res.RefreshList,Mode=OneWay,Source={x:Static resx:R.Current}}">
        <MenuItem.Header>
          <PathIcon Data="{StaticResource RefreshDrawing}" Width="14"></PathIcon>
        </MenuItem.Header>
      </MenuItem>
      <MenuItem Command="{ReflectionBinding SetActivity_Click}"
                ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_ProtectionAuth_SaveApply,Mode=OneWay,Source={x:Static resx:R.Current}}">
        <MenuItem.Header>
          <PathIcon Data="{StaticResource SaveDrawing}" Width="14"></PathIcon>
        </MenuItem.Header>
      </MenuItem>
    </Menu>

    <TextBlock IsVisible="{CompiledBinding IsAuthorizedListEmpty}"
               Text="{ReflectionBinding Path=Res.SteamAccountPage_ShareEmpt,Mode=OneWay,Source={x:Static resx:R.Current}}"
               TextWrapping="WrapWithOverflow"
               VerticalAlignment="Center"
               HorizontalAlignment="Center"/>
    <ScrollViewer  HorizontalScrollBarVisibility="Disabled"
                   VerticalScrollBarVisibility="Auto"
                   Margin="{StaticResource TitleBarAfterMargin}"
                   Padding="0 10">
      <ItemsRepeater Items="{CompiledBinding AuthorizedList}">
        <ItemsRepeater.Layout>
          <!--<UniformGridLayout ItemsJustification="SpaceEvenly" MinRowSpacing="20" Orientation="Horizontal"
                                       MaximumRowsOrColumns="6" />-->
          <StackLayout Orientation="Vertical" Spacing="10"></StackLayout>
        </ItemsRepeater.Layout>
        <ItemsRepeater.ItemTemplate>
          <DataTemplate>
            <Border x:Name="card"
                    Classes="paper"
                    Background="{DynamicResource ThemeBrushKey}"
                    Margin="10 0">
              <Grid Height="92"
                    ColumnDefinitions="Auto,*,Auto">
                <Border CornerRadius="{StaticResource PaperRadiusLeft}"
                        ClipToBounds="True">
                  <Panel x:Name="avatar"
                         Cursor="Hand"
                         ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_OpenUserUrl,Mode=OneWay,Source={x:Static resx:R.Current}}">
                    <!--OpenUserProfileUrl-->
                    <i:Interaction.Behaviors>
                      <ia:EventTriggerBehavior EventName="Tapped" SourceObject="{ReflectionBinding #avatar}">
                        <ia:InvokeCommandAction Command="{ReflectionBinding #u.DataContext.OpenUserProfileUrl}" CommandParameter="{Binding}"/>
                      </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <gif:Image2
                           Width="92"
                           AutoStart="true"
                           Stretch="UniformToFill"
                           StretchDirection="Both"
                           Source="{Binding AvatarStream^}"
                           FallbackSource="avares://System.Application.SteamTools.Client.Avalonia/Application/UI/Assets/AppResources/avatar.jpg">
                    </gif:Image2>
                  </Panel>
                </Border>
                <Panel Grid.Column="1" Margin="10 5">
                  <StackPanel>
                    <DockPanel LastChildFill="True">
                      <controls:ProgressRing IsIndeterminate="True"
                                              ToolTip.Tip="{ReflectionBinding Path=Res.Loading,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                             HorizontalAlignment="Stretch" Height="30"
                                             Width="30"
                                            IsVisible="{Binding SteamNickName,Converter={StaticResource IsNullConverter}}"/>
                      <controls:ScrollingTextBlock x:Name="nickname"
                                                   Text="{Binding SteamNickName}"
                                                   FontSize="20"
                                                   Foreground="{DynamicResource HighlightForegroundBrushKey}"/>
                      <!--<WrapPanel VerticalAlignment="Center" IsVisible="{Binding Remark,Converter={StaticResource IsNullConverter},ConverterParameter=invert}">-->
                      <WrapPanel VerticalAlignment="Center">
                        <!--<TextBlock Text="("></TextBlock>-->
                        <!--<controls:ScrollingTextBlock Text="{Binding Remark}">
                                                    </controls:ScrollingTextBlock>-->
                        <!--<TextBlock Text=")"></TextBlock>-->
                        <!--<PathIcon Data="{StaticResource EditDrawing}" Width="10" Height="10"></PathIcon>-->
                        <controls:ScrollingTextBlock
                             Padding="10 0 10 0"
                             FontSize="14"
                             Text="{Binding Remark,Mode=TwoWay}"
                             Foreground="{DynamicResource InactiveForegroundBrushKey}">
                        </controls:ScrollingTextBlock>
                      </WrapPanel>

                    </DockPanel>

                    <StackPanel Orientation="Horizontal">
                      <TextBlock Text="{Binding AccountName}"
                                 FontSize="12"
                                 VerticalAlignment="Center"
                                 Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                      <TextBlock Text="(" FontSize="12"
                                 VerticalAlignment="Center"
                                 Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                      <TextBox Text="{Binding SteamId64_Int,Mode=OneWay}"
                                 FontSize="12"
                                 VerticalAlignment="Center"
                                 Classes="readonlybox"
                                 Padding="0"
                                 Foreground="{DynamicResource InactiveForegroundBrushKey}" IsReadOnly="True"></TextBox>
                      <TextBlock Text=")"
                                 VerticalAlignment="Center"
                                 FontSize="12"
                                 Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                    </StackPanel>
                  </StackPanel>

                  <WrapPanel VerticalAlignment="Bottom" Orientation="Horizontal">
                    <PathIcon Data="{StaticResource ClockDrawing}" Width="12" VerticalAlignment="Center" Margin="5 0" Foreground="{DynamicResource InactiveForegroundBrushKey}">
                    </PathIcon>
                    <TextBlock Text="{Binding TimeusedTime,StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}" FontSize="12" VerticalAlignment="Center" Foreground="{DynamicResource InactiveForegroundBrushKey}"/>
                  </WrapPanel>

                </Panel>
                <Grid Grid.Column="3" RowDefinitions="*,Auto">
                  <!--<Panel>
                    <Button Classes="flatbutton"
                            IsVisible="False"
                            x:Name="delete_btn"
                            Background="Transparent"
                            Cursor="Hand"
                            HorizontalAlignment="Right"
                            Margin="0,0,0,68"
                            ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_DeleteUser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                            Command="{ReflectionBinding #u.DataContext.DeleteUserButton_Click}" CommandParameter="{Binding}">
                      <PathIcon Width="12" Data="{DynamicResource CloseDrawing}">
                      </PathIcon>
                    </Button>
                  </Panel>-->
                  <WrapPanel Grid.Row="1" Orientation="Horizontal">
                    <Border BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}"
                            IsEnabled="{Binding !First}"
                            BorderThickness=".66 .66 .66 0"
                            ToolTip.Tip="{ReflectionBinding Path=Res.Top,Mode=OneWay,Source={x:Static resx:R.Current}}">
                      <Button Classes="flatbutton"
                              Cursor="Hand"
                              HorizontalAlignment="Stretch"
                              MaxWidth="200"
                              Command="{ReflectionBinding #u.DataContext.SetFirstButton_Click}"
                              CommandParameter="{Binding}">
                        <controls:ScrollingTextBlock Text="{ReflectionBinding Path=Res.Top,Mode=OneWay,Source={x:Static resx:R.Current}}"></controls:ScrollingTextBlock>
                      </Button>
                    </Border>
                    <Border BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}"
                            IsEnabled="{Binding !First}"
                            BorderThickness=".66 .66 .66 0"
                            ToolTip.Tip="{ReflectionBinding Path=Res.Up,Mode=OneWay,Source={x:Static resx:R.Current}}">
                      <Button Classes="flatbutton"
                              Cursor="Hand"
                              HorizontalAlignment="Stretch"
                              MaxWidth="200"
                              Command="{ReflectionBinding #u.DataContext.UpButton_Click}"
                              CommandParameter="{Binding}">
                        <controls:ScrollingTextBlock Text="{ReflectionBinding Path=Res.Up,Mode=OneWay,Source={x:Static resx:R.Current}}"></controls:ScrollingTextBlock>
                      </Button>
                    </Border>
                    <Border BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}"
                            IsEnabled="{Binding !End}"
                            BorderThickness="0 .66 0 0"
                            ToolTip.Tip="{ReflectionBinding Path=Res.Dow,Mode=OneWay,Source={x:Static resx:R.Current}}">
                      <Button Classes="flatbutton"
                              Cursor="Hand"
                              MaxWidth="200"
                              HorizontalAlignment="Stretch"
                              Command="{ReflectionBinding #u.DataContext.DowButton_Click}"
                              CommandParameter="{Binding}">
                        <controls:ScrollingTextBlock Text="{ReflectionBinding Path=Res.Dow,Mode=OneWay,Source={x:Static resx:R.Current}}"></controls:ScrollingTextBlock>
                      </Button>
                    </Border>
                  </WrapPanel>
                </Grid>
              </Grid>
            </Border>
          </DataTemplate>
        </ItemsRepeater.ItemTemplate>
      </ItemsRepeater>
    </ScrollViewer>
  </Panel>
</Window>
