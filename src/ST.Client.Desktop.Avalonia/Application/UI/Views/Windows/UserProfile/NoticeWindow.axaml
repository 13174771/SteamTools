<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="600" d:DesignHeight="400"
        Width="750" Height="500"
        x:Class="System.Application.UI.Views.Windows.NoticeWindow"
        xmlns:gif="using:AvaloniaGif"
        xmlns:service="using:System.Application.Services"
        xmlns:resx="using:System.Application.UI.Resx"
        xmlns:vm="using:System.Application.UI.ViewModels"
        xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
        xmlns:models="using:System.Application.Models"
        Background="Transparent"
        xmlns:ui="using:FluentAvalonia.UI.Controls"
        Title="{Binding Title}"
        x:Name="u"
        x:DataType="vm:NoticeWindowViewModel"
        x:CompileBindings="True">
  <Panel HorizontalAlignment="Stretch">
    <controls:TitleBar/>

    <DockPanel Margin="{StaticResource TitleBarAfterMargin}">
      <Border DockPanel.Dock="Top"
              Classes="paper"
              Margin="10 10 10 0"
              Background="{DynamicResource ThemeBrushKey}">
        <ui:CommandBar DefaultLabelPosition="Right"
                       IsSticky="False">
          <ui:CommandBar.PrimaryCommands>

            <ui:CommandBarElementContainer Margin="5 0">
              <WrapPanel VerticalAlignment="Center">
                <TextBlock Text="{ReflectionBinding Path=Res.Notice_Type,StringFormat={}{0}：,Mode=OneWay,Source={x:Static resx:R.Current}}"
                           VerticalAlignment="Center"/>
                <ComboBox VerticalAlignment="Center"
                          Items="{ReflectionBinding Source={x:Static service:NotificationService.Current},Path=NoticeTypes,Mode=OneWay}"
                          SelectedItem="{Binding SelectType,Mode=TwoWay}">
                  <ComboBox.ItemTemplate>
                    <DataTemplate DataType="models:NoticeTypeDTO">
                      <TextBlock Text="{Binding Name}"/>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
              </WrapPanel>
            </ui:CommandBarElementContainer>

            <!--<ui:CommandBarElementContainer>
              <ComboBox VerticalAlignment="Center" PlaceholderText="已读消息"/>
            </ui:CommandBarElementContainer>-->

            <ui:CommandBarSeparator/>

            <!--<ui:CommandBarButton Label="{ReflectionBinding Path=Res.Refresh,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                 Command="{Binding Refresh_Click,Mode=OneTime}">
              <ui:CommandBarButton.Icon>
                <ui:SymbolIcon Symbol="Refresh"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>-->

            <ui:CommandBarButton Label="{ReflectionBinding Path=Res.Notice_AllMarkHasRead,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                 IsEnabled="{ReflectionBinding Source={x:Static service:NotificationService.Current},Path=UnreadNotificationsCount,Converter={StaticResource IsNullConverter},ConverterParameter=invert,Mode=OneWay}"
                                 Command="{Binding MarkAllRead,Mode=OneTime}">
              <ui:CommandBarButton.Icon>
                <ui:SymbolIcon Symbol="Checkmark"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>
          </ui:CommandBar.PrimaryCommands>
        </ui:CommandBar>
      </Border>

      <Panel>
        <StackPanel IsVisible="{Binding Path=IsLoading,Mode=OneWay}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Spacing="10">
          <ProgressBar
              Width="100"
              Height="100"
              Classes="Circle"
              IsIndeterminate="True"
              Orientation="Vertical"
              HorizontalAlignment="Center"/>
          <TextBlock Text="{ReflectionBinding Path=Res.Loading,Mode=OneWay,Source={x:Static resx:R.Current}}"
                     HorizontalAlignment="Center"/>
        </StackPanel>

        <TextBlock Text="{ReflectionBinding Path=Res.NoticeEmpty,Mode=OneWay,Source={x:Static resx:R.Current}}"
                   IsVisible="{Binding Path=IsEmpty,Mode=OneWay}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center" />

        <Border Classes="paper"
                Background="{DynamicResource ThemeBrushKey}"
                Margin="10"
                IsVisible="{Binding Path=!IsEmpty,Mode=OneWay}">
          <Panel>
            <Grid ColumnDefinitions="4*,Auto,7*">
              <Border>
                <ListBox Items="{Binding Notices}"
                         SelectedItem="{Binding NoticeItem,Mode=TwoWay}">
                  <ListBox.ItemTemplate>
                    <DataTemplate x:DataType="models:NoticeDTO">
                      <StackPanel  Margin="10" Spacing="8">
                        <DockPanel>
                          <ui:InfoBadge IsVisible="{Binding !HasRead}"
                                        Classes="Critical"
                                        Height="6"
                                        Width="6"
                                        DockPanel.Dock="Right"
                                        HorizontalAlignment="Right" />
                          <TextBlock Text="{Binding Title,Mode=OneWay}"
                                     Classes="h6"
                                     TextTrimming="CharacterEllipsis"/>
                        </DockPanel>
                        <TextBlock
                             Text="{Binding Introduction}"
                             Foreground="{DynamicResource InactiveForegroundBrushKey}"
                             Classes="h8"
                             TextTrimming="CharacterEllipsis"/>
                        <TextBlock
                             Text="{Binding CreationTime,StringFormat={}{0:yyyy-MM-dd}}"
                             Foreground="{DynamicResource InactiveForegroundBrushKey}"
                             HorizontalAlignment="Right"
                             Classes="h8"/>
                      </StackPanel>
                    </DataTemplate>
                  </ListBox.ItemTemplate>
                </ListBox>
              </Border>

              <Separator Classes="Vertical"
                         Margin="5 0"
                         Grid.Column="1"/>

              <ScrollViewer Padding="10"
                            Grid.Column="2">
                <StackPanel IsVisible="{Binding NoticeItem.Title,Mode=OneWay,Converter={StaticResource IsNullConverter},ConverterParameter=invert}}">
                  <TextBlock Text="{Binding NoticeItem.Title}"
                             Classes="h3"
                             HorizontalAlignment="Center"/>
                  <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Right">
                    <TextBlock
                        IsVisible="{Binding Path=NoticeItem.Author,Mode=OneWay,Converter={StaticResource IsNullConverter},ConverterParameter=invert}}"
                        Text="{Binding NoticeItem.Author}"
                        VerticalAlignment="Center"/>
                    <TextBlock
                        Text="{Binding NoticeItem.CreationTime,StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"
                        VerticalAlignment="Center"/>
                    <Button ToolTip.Tip="{ReflectionBinding Path=Res.OpenInBrowser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                            Cursor="Hand"
                            Classes="plain"
                            IsVisible="{Binding NoticeItem.IsOpenBrowser}"
                            Command="{ReflectionBinding OpenNoticeWeb}"
                            CommandParameter="{Binding NoticeItem}">
                      <Button.Content>
                        <ui:SymbolIcon Symbol="Open" FontSize="16"/>
                      </Button.Content>
                    </Button>
                  </StackPanel>

                  <Separator Classes="Separator" Margin="0 10"/>

                  <gif:Image2 Width="{ReflectionBinding $parent.Width}"
                              DecodeWidth="{ReflectionBinding $parent.Width}"
                              Margin="10 0"
                              Source="{Binding NoticeItem.PictureStream^}"
                              IsVisible="{Binding NoticeItem.PictureStream,Converter={StaticResource IsNullConverter},ConverterParameter=invert}}"
                              Stretch="Uniform" />

                  <TextBlock TextWrapping="Wrap"
                             Margin="0 10"
                             Text="{Binding NoticeItem.Introduction}"
                             Classes="h7"/>

                </StackPanel>
              </ScrollViewer>
            </Grid>
          </Panel>
        </Border>

      </Panel>
    </DockPanel>
  </Panel>
</Window>
