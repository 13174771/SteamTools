<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:System.Application.UI.ViewModels"
             xmlns:resx="using:System.Application.UI.Resx"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             xmlns:controls="using:System.Application.UI.Views.Controls"
             xmlns:service="using:System.Application.Services"
             xmlns:app="using:System.Application"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:gif="using:AvaloniaGif"
             x:CompileBindings="True"
             x:DataType="vm:AccountPageViewModel"
             x:Class="System.Application.UI.Views.Pages.AccountPage">
  <ScrollViewer>
    <StackPanel Classes="Settings">
      <Border Margin="0 20">
        <DockPanel>
          <Button Classes="plain"
                  Command="{Binding RefreshButton}"
                  ToolTip.Tip="{ReflectionBinding Path=Res.RefreshAvatar,Mode=OneWay,Source={x:Static resx:R.Current}}">
            <Border Width="128"
                    Height="128"
                    CornerRadius="128"
                    ClipToBounds="True">
              <gif:Image2 Stretch="Uniform"
                    Source="{ReflectionBinding Path=AvatarPath, Source={x:Static service:UserService.Current},Mode=OneWay,Converter={StaticResource BitmapAssetValueConverter}}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    DecodeWidth="128"
                    Cursor="Hand"
                    FallbackSource="avares://System.Application.SteamTools.Client.Avalonia/Application/UI/Assets/AppResources/avatar.jpg"/>
            </Border>
          </Button>
          <StackPanel Spacing="5"
                      Margin="10"
                      IsVisible="{ReflectionBinding Path=User,Mode=OneWay,Source={x:Static service:UserService.Current},Converter={StaticResource IsNullConverter},ConverterParameter=invert}">
            <DockPanel>
              <StackPanel Orientation="Horizontal"
                          Margin="0"
                          Spacing="10"
                          VerticalAlignment="Center">
                <StackPanel VerticalAlignment="Center" Spacing="3">
                  <TextBlock Text="{ReflectionBinding Path=User.NickName,Mode=OneWay,Source={x:Static service:UserService.Current}}"
                             Classes="h3"/>
                  <StackPanel Orientation="Horizontal" Spacing="10">
                    <TextBlock Text="{ReflectionBinding Path=User.Level,Mode=OneWay,Source={x:Static service:UserService.Current},StringFormat={}Lv.{0}}"
                               Classes="h8"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"/>
                    <Border IsVisible="{ReflectionBinding Path=User.UserType,Mode=OneWay,Source={x:Static service:UserService.Current},Converter={StaticResource EnumEqualValueConverter},ConverterParameter={x:Static app:UserType.Sponsor}}"
                            VerticalAlignment="Center">
                      <TextBlock Text="{ReflectionBinding Path=Res.User_Sponsor,Mode=OneWay,Source={x:Static resx:R.Current},StringFormat={}💖 {0}}"
                                 Classes="h8"/>
                    </Border>
                  </StackPanel>
                  <Panel VerticalAlignment="Center">
                    <ProgressBar Classes="Material"
                                 Height="14"
                                 Value="60"
                                 Width="300"
                                 VerticalAlignment="Center"/>
                    <TextBlock Text="200 / 300"
                               FontSize="12"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"/>
                  </Panel>
                </StackPanel>
              </StackPanel>
              <StackPanel Orientation="Horizontal"
                          Margin="0"
                          HorizontalAlignment="Right"
                          DockPanel.Dock="Right">
                <Button Background="Transparent"
                        Command="{Binding OpenNotice}">
                  <WrapPanel>
                    <PathIcon Width="16" Data="{StaticResource AlterDrawing}"
                              Margin="0 0 10 0"/>
                    <TextBlock Text="查看通知"/>
                  </WrapPanel>
                </Button>
                <Button Background="Transparent"
                        Command="{Binding SignIn}"
                        ToolTip.Tip="{ReflectionBinding Path=Res.Sign,Mode=OneWay,Source={x:Static resx:R.Current}}">
                  <WrapPanel>
                    <PathIcon Width="16" Data="{StaticResource SignDrawing}"
                              Margin="0 0 10 0"/>
                    <TextBlock Text="点击签到"/>
                  </WrapPanel>
                </Button>
              </StackPanel>
            </DockPanel>
            <Separator Classes="Separator" />
            <StackPanel Orientation="Horizontal"
                        DockPanel.Dock="Left"
                        Spacing="10">
              <Label Content="{ReflectionBinding Path=Res.User_EngineOil,Mode=OneWay,Source={x:Static resx:R.Current},StringFormat={}{0} :}" />
              <Button Classes="Hyperlink"
                      Cursor="Hand"
                      Content="{ReflectionBinding Path=User.EngineOil,Mode=OneWay,Source={x:Static service:UserService.Current}}"
                      Command="{ReflectionBinding OpenEngineOilLogs}"
                      ToolTip.Tip="{ReflectionBinding Path=Res.User_EngineOil,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
              <Label Content="{ReflectionBinding Path=Res.User_Balance,Mode=OneWay,Source={x:Static resx:R.Current},StringFormat={}{0} :}"/>
              <Button Classes="Hyperlink"
                      Cursor="Hand"
                      Content="{ReflectionBinding Path=User.Balance,Mode=OneWay,Source={x:Static service:UserService.Current}}"
                      Command="{ReflectionBinding OpenEngineOilLogs}"
                      ToolTip.Tip="{ReflectionBinding Path=Res.User_Balance,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
              <StackPanel Orientation="Horizontal" Spacing="10">
                <Label Content="账号关联信息 : "/>
                <Button Classes="plain"
                        Command="{Binding OpenSteamProfile}">
                  <PathIcon ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_OpenUserUrl,
                                                            Mode=OneWay,
                                                            Source={x:Static resx:R.Current}}"
                            IsVisible="{ReflectionBinding Path=User.SteamAccountId,
                                                          Mode=OneWay,
                                                          Source={x:Static service:UserService.Current},
                                                          Converter={StaticResource IsNullConverter},ConverterParameter=invert}"
                            Data="{StaticResource SteamDrawing}" />
                </Button>

                <PathIcon IsVisible="{ReflectionBinding Path=User.MicrosoftAccountEmail,
                                                          Mode=OneWay,
                                                          Source={x:Static service:UserService.Current},
                                                          Converter={StaticResource IsNullConverter},ConverterParameter=invert}"
                          Data="{StaticResource Xbox}" />

                <PathIcon IsVisible="{ReflectionBinding Path=User.QQNickName,
                                                          Mode=OneWay,
                                                          Source={x:Static service:UserService.Current},
                                                          Converter={StaticResource IsNullConverter},ConverterParameter=invert}"
                          Data="{StaticResource QQ}" />

                <PathIcon Data="{StaticResource AddDrawing}" />
              </StackPanel>
            </StackPanel>
          </StackPanel>
        </DockPanel>
      </Border>

      <Label Content="帐户设置"/>

      <Button Classes="plain"
              Cursor="Hand"
              Command="{ReflectionBinding OpenUserProfile}">
        <Border Classes="Item">
          <DockPanel>
            <TextBlock Text="你的信息"/>
            <ui:SymbolIcon Classes="right"
                           Symbol="Open"
                           FontSize="24"/>
          </DockPanel>
        </Border>
      </Button>

      <Expander>
        <Expander.Header>
          <DockPanel HorizontalAlignment="Stretch">
            <TextBlock Text="账号绑定"/>
          </DockPanel>
        </Expander.Header>
        <StackPanel Spacing="10">
          <Border Classes="Item">
            <DockPanel>
              <TextBlock Text="关闭程序内广告"/>
              <ToggleSwitch />
            </DockPanel>
          </Border>
        </StackPanel>
      </Expander>

      <Expander>
        <Expander.Header>
          <DockPanel HorizontalAlignment="Stretch">
            <TextBlock Text="账号设置"/>
          </DockPanel>
        </Expander.Header>
        <StackPanel Spacing="10">
          <Border Classes="Item">
            <DockPanel>
              <TextBlock Text="关闭程序内广告"/>
              <ToggleSwitch />
            </DockPanel>
          </Border>
        </StackPanel>
      </Expander>

      <Expander>
        <Expander.Header>
          <DockPanel HorizontalAlignment="Stretch">
            <TextBlock Text="安全设置"/>
          </DockPanel>
        </Expander.Header>
        <StackPanel Spacing="10">
          <Border Classes="Item">
            <DockPanel>
              <TextBlock Classes="FormItemLabel"
                         Text="{ReflectionBinding Path=Res.User_Phone,Mode=OneWay,Source={x:Static resx:R.Current}}"
                         Grid.Row="0"/>
              <Button Content="{ReflectionBinding Path=Res.Modify,Mode=OneWay,Source={x:Static resx:R.Current}}"
                      Command="{Binding OnBtnChangeBindPhoneNumberClick}"
                      IsVisible="{ReflectionBinding Path=HasPhoneNumber,Source={x:Static service:UserService.Current}}}"
                      Grid.Row="0"
                      Grid.Column="2"/>
              <Button Content="{ReflectionBinding Path=Res.Bind,Mode=OneWay,Source={x:Static resx:R.Current}}"
                      Command="{Binding OnBtnBindPhoneNumberClick}"
                      IsVisible="{ReflectionBinding Path=!HasPhoneNumber,Source={x:Static service:UserService.Current}}}"
                      Grid.Row="0"
                      Grid.Column="2"/>
            </DockPanel>
          </Border>
        </StackPanel>
      </Expander>
    </StackPanel>
  </ScrollViewer>
</UserControl>

