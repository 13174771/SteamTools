<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:System.Application.UI.ViewModels"
             xmlns:resx="using:System.Application.UI.Resx"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
             xmlns:service="using:System.Application.Services"
             xmlns:models="using:System.Application.Models"
             xmlns:ms="using:System.Application.Settings"
             xmlns:sys_app="using:System.Application"
             xmlns:i="using:Avalonia.Xaml.Interactivity"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
             x:DataType="vm:AccountPageViewModel"
             xmlns:gif="using:AvaloniaGif"
             x:CompileBindings="True"
             x:Class="System.Application.UI.Views.Pages.AccountPage">
  <StackPanel HorizontalAlignment="Stretch" Margin="{StaticResource PageMargin}" Background="Transparent" Spacing="20">
    <StackPanel Spacing="8" DockPanel.Dock="Right">
      <Border
          Padding="10"
          Margin="10 20 10 10">
        <Panel >
          <DockPanel>
            <DockPanel>
              <i:Interaction.Behaviors>
                <ia:EventTriggerBehavior EventName="Tapped" SourceObject="{ReflectionBinding #avatar}">
                  <ia:InvokeCommandAction Command="{ReflectionBinding OpenUserProfile}"/>
                </ia:EventTriggerBehavior>
                <ia:EventTriggerBehavior EventName="PointerEnter" SourceObject="{ReflectionBinding #avatar}">
                  <ia:ChangePropertyAction
                      PropertyName="IsVisible"
                      TargetObject="{ReflectionBinding #avatarMask}"
                      Value="True" />
                </ia:EventTriggerBehavior>
                <ia:EventTriggerBehavior EventName="PointerLeave" SourceObject="{ReflectionBinding #avatar}">
                  <ia:ChangePropertyAction
                      PropertyName="IsVisible"
                      TargetObject="{ReflectionBinding #avatarMask}"
                      Value="False" />
                </ia:EventTriggerBehavior>
              </i:Interaction.Behaviors>
              <Canvas x:Name="DrawCanvas"
                      VerticalAlignment="Center"
                      Margin="10 0"
                      Height="64"
                      Width="64"
                      Background="Transparent">
                <gif:Image2 x:Name="avatar"
                      Source="{ReflectionBinding Path=AvatarPath, Source={x:Static service:UserService.Current},Mode=OneWay,Converter={StaticResource BitmapAssetValueConverter}}"
                      Stretch="Uniform"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      DecodeWidth="64"
                      Height="64"
                      Width="64"
                      Cursor="Hand"
                      FallbackSource="avares://System.Application.SteamTools.Client.Avalonia/Application/UI/Assets/AppResources/avatar.jpg"
                      ToolTip.Tip="{ReflectionBinding Path=Res.UserProfile,
                                                Mode=OneWay,
                                                Source={x:Static resx:R.Current}}">
                  <gif:Image2.Clip>
                    <EllipseGeometry Rect="0,0,64,64" />
                  </gif:Image2.Clip>
                </gif:Image2>
                <Rectangle x:Name="avatarMask"
                           IsVisible="false"
                           IsHitTestVisible="False"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Width="64"
                           Height="64"
                           Fill="#99000000">
                  <Rectangle.Clip>
                    <EllipseGeometry Rect="0,0,64,64" />
                  </Rectangle.Clip>
                </Rectangle>
              </Canvas>
            </DockPanel>
            <StackPanel Spacing="5" Margin="10"  IsVisible="{ReflectionBinding Path=User,Mode=OneWay,Source={x:Static service:UserService.Current},Converter={StaticResource IsNullConverter},ConverterParameter=invert}">
              <DockPanel>
                <TextBlock Text="{ReflectionBinding Path=Res.User_UnLogin,Mode=OneWay,Source={x:Static resx:R.Current}}"
                          IsVisible="{ReflectionBinding Path=User,Mode=OneWay,Source={x:Static service:UserService.Current},Converter={StaticResource IsNullConverter}}"
                          Foreground="{DynamicResource HighlightForegroundBrushKey}"
                          FontSize="14"
                          VerticalAlignment="Center"/>
                <TextBlock  IsVisible="{Binding IsSponsor}" Margin="0 0 10 0" Text="{ReflectionBinding Path=Res.User_Sponsor,Mode=OneWay,Source={x:Static resx:R.Current}}" FontSize="12"></TextBlock>
                <controls:ScrollingTextBlock Text="{ReflectionBinding Path=User.NickName,Mode=OneWay,Source={x:Static service:UserService.Current}}"
                       Foreground="{DynamicResource HighlightForegroundBrushKey}"
                       FontSize="14"
                       VerticalAlignment="Center"/>
                <Label Margin="15 0 0 0" Content="{ReflectionBinding Path=User.LevelStr,Mode=OneWay,Source={x:Static service:UserService.Current}}" Foreground="{DynamicResource HighlightForegroundBrushKey}" VerticalContentAlignment="Center" FontSize="12"/>
                <Border CornerRadius="2" Height="5" Width="25" Background="#ffffff" Opacity="0.2" Margin="0 5 5 0">
                  <Border Width="{ReflectionBinding LinearWidth}" HorizontalAlignment="Left" CornerRadius="10">
                    <Border.Background>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="#b00dff"/>
                        <GradientStop Offset="1" Color="#580083"/>
                      </LinearGradientBrush>
                    </Border.Background>
                  </Border>
                </Border>

                <WrapPanel HorizontalAlignment="Right">
                  <Button Background="Transparent" Cursor="Hand"
                          Command="{ReflectionBinding SignIn}"
                          ToolTip.Tip="{ReflectionBinding Path=Res.Sign,Mode=OneWay,Source={x:Static resx:R.Current}}">
                    <PathIcon Width="16"  Data="{StaticResource SignDrawing}" />
                  </Button>
                  <Button Background="Transparent" Cursor="Hand"
                          Margin="10 0 10 0"
                          Command="{ReflectionBinding RefreshButton}"
                          ToolTip.Tip="{ReflectionBinding Path=Res.RefreshAvatar,Mode=OneWay,Source={x:Static resx:R.Current}}">
                    <PathIcon Width="16"  Data="{StaticResource RefreshDrawing}" />
                  </Button>
                </WrapPanel>
              </DockPanel>
              <Separator Classes="Separator"></Separator>
              <DockPanel>
                <DockPanel>
                  <Label Content="{ReflectionBinding Path=Res.User_EngineOil,Mode=OneWay,Source={x:Static resx:R.Current}}"></Label>
                  <Label Content=":"></Label>
                  <Button Background="Transparent" Cursor="Hand"
                          Padding="0"
                          Command="{ReflectionBinding OpenEngineOilLogs}"
                          ToolTip.Tip="{ReflectionBinding Path=Res.User_EngineOil,Mode=OneWay,Source={x:Static resx:R.Current}}">
                    <Label Content="{ReflectionBinding Path=User.EngineOil,Mode=OneWay,Source={x:Static service:UserService.Current}}">
                    </Label>
                  </Button>
                </DockPanel>
                <DockPanel>
                  <Label Content="{ReflectionBinding Path=Res.User_Balance,Mode=OneWay,Source={x:Static resx:R.Current}}"></Label>
                  <Label Content=":"></Label>
                  <Button Background="Transparent" Cursor="Hand"
                          Padding="0"
                          Command="{ReflectionBinding OpenEngineOilLogs}"
                          ToolTip.Tip="{ReflectionBinding Path=Res.User_Balance,Mode=OneWay,Source={x:Static resx:R.Current}}">
                    <Label Content="{ReflectionBinding Path=User.Balance,Mode=OneWay,Source={x:Static service:UserService.Current}}">
                    </Label>
                  </Button>

                </DockPanel>
                <DockPanel HorizontalAlignment="Left" Margin="12,0,0,0">
                  <DockPanel.Styles>
                    <Style Selector="PathIcon.FormItemLabel">
                      <Setter Property="Margin" Value="0,0,12,0"/>
                      <Setter Property="Height" Value="22" />
                      <Setter Property="Width" Value="22" />
                      <Setter Property="Cursor" Value="Hand" />
                    </Style>
                  </DockPanel.Styles>
                  <i:Interaction.Behaviors>
                    <ia:EventTriggerBehavior EventName="Tapped" SourceObject="{ReflectionBinding #steam}">
                      <ia:InvokeCommandAction Command="{ReflectionBinding OpenSteamProfile}" />
                    </ia:EventTriggerBehavior>
                  </i:Interaction.Behaviors>
                  <PathIcon Classes="FormItemLabel"
                            x:Name="steam"
                            ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_OpenUserUrl,
                                                            Mode=OneWay,
                                                            Source={x:Static resx:R.Current}}"
                            IsVisible="{ReflectionBinding Path=User.SteamAccountId,
                                                          Mode=OneWay,
                                                          Source={x:Static service:UserService.Current},
                                                          Converter={StaticResource IsNullConverter},ConverterParameter=invert}"
                            Data="{StaticResource SteamDrawing}" />
                  <PathIcon Classes="FormItemLabel"
                            IsVisible="{ReflectionBinding Path=User.MicrosoftAccountEmail,
                                                          Mode=OneWay,
                                                          Source={x:Static service:UserService.Current},
                                                          Converter={StaticResource IsNullConverter},ConverterParameter=invert}"
                            Data="{StaticResource Xbox}" />
                  <PathIcon Classes="FormItemLabel"
                            IsVisible="{ReflectionBinding Path=User.QQNickName,
                                                          Mode=OneWay,
                                                          Source={x:Static service:UserService.Current},
                                                          Converter={StaticResource IsNullConverter},ConverterParameter=invert}"
                            Data="{StaticResource QQ}" />
                </DockPanel>
              </DockPanel>

            </StackPanel>
          </DockPanel>
        </Panel>
      </Border>

      <StackPanel Classes="Settings" Margin="30 0 20 30">
        <Button Classes="plain" Command="{ReflectionBinding OpenUserProfile}">
          <Border Classes="Item">
            <DockPanel>
              <TextBlock Text="您的信息"/>
              <ui:SymbolIcon Classes="right"
                             Symbol="Open"
                             FontSize="24"/>
            </DockPanel>
          </Border>
        </Button>

        <Expander>
          <Expander.Header>
            <DockPanel HorizontalAlignment="Stretch">
              <TextBlock Text="个性化设置"/>
            </DockPanel>
          </Expander.Header>
          <StackPanel Orientation="Horizontal"
                      Spacing="10">
            <TextBlock Text="关闭广告"/>
            <TextBlock Text="xxxx"/>
          </StackPanel>
        </Expander>

        <Expander>
          <Expander.Header>
            <DockPanel HorizontalAlignment="Stretch">
              <TextBlock Text="安全"/>
            </DockPanel>
          </Expander.Header>
          <StackPanel Orientation="Horizontal"
                      Spacing="10">
            <Grid>
              <Panel.Styles>
                <Style Selector="TextBlock.FormItemLabel">
                  <Setter Property="VerticalAlignment" Value="Center"/>
                  <Setter Property="HorizontalAlignment" Value="Right"/>
                  <Setter Property="Margin" Value="0,0,12,0"/>
                </Style>
              </Panel.Styles>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="16"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="80"/>
              </Grid.ColumnDefinitions>

              <TextBlock Classes="FormItemLabel"
                         Text="{ReflectionBinding Path=Res.User_Phone,Mode=OneWay,Source={x:Static resx:R.Current}}"
                         Grid.Row="0"/>
              <Button Classes="Secondary"
                      Content="{ReflectionBinding Path=Res.Modify,Mode=OneWay,Source={x:Static resx:R.Current}}"
                      Command="{Binding OnBtnChangeBindPhoneNumberClick}"
                      IsVisible="{ReflectionBinding Path=HasPhoneNumber,Source={x:Static service:UserService.Current}}}"
                      Grid.Row="0"
                      Grid.Column="2"/>
              <Button Classes="Secondary"
                      Content="{ReflectionBinding Path=Res.Bind,Mode=OneWay,Source={x:Static resx:R.Current}}"
                      Command="{Binding OnBtnBindPhoneNumberClick}"
                      IsVisible="{ReflectionBinding Path=!HasPhoneNumber,Source={x:Static service:UserService.Current}}}"
                      Grid.Row="0"
                      Grid.Column="2"/>
            </Grid>
          </StackPanel>
        </Expander>
      </StackPanel>
    </StackPanel>
  </StackPanel>
</UserControl>

