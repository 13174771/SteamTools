<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:System.Application.UI.ViewModels"
             xmlns:resx="using:System.Application.UI.Resx"
             xmlns:ms="using:System.Application.Settings"
             xmlns:converters="using:System.Application.Converters"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:sys="using:System"
             xmlns:markup="using:System.Application.Markup"
             xmlns:service="using:System.Application.Services"
             xmlns:app="using:System.Application"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="System.Application.UI.Views.Pages.Settings_UI">
  <UserControl.Resources>
    <converters:StringEqualsConverter x:Key="StringEqualsConverter" />
    <converters:ColorStringToBrush x:Key="ColorStringToBrush" />
  </UserControl.Resources>
  <ScrollViewer Classes="tabscroll">
    <StackPanel Classes="Settings">
      <Border Classes="Item">
        <DockPanel>
          <TextBlock Text="{ReflectionBinding Path=Res.Settings_ThemeAccent,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
          <StackPanel Orientation="Horizontal"
                      Classes="right"
                      Spacing="10">
            <RadioButton Content="{ReflectionBinding Path=Res.Settings_UI_SystemDefault,Mode=OneWay,Source={x:Static resx:R.Current}}"
                         IsChecked="{ReflectionBinding Source={x:Static ms:UISettings.GetUserThemeAccent},Path=Value, Mode=TwoWay}"/>
            <RadioButton x:Name="AccentCustom"
                         Content="{ReflectionBinding Path=Res.Settings_UI_Custom,Mode=OneWay,Source={x:Static resx:R.Current}}"
                         IsChecked="{ReflectionBinding Source={x:Static ms:UISettings.GetUserThemeAccent},Path=!Value, Mode=OneWay}"/>
            <ui:ColorPickerButton IsVisible="{ReflectionBinding #AccentCustom.IsChecked}"
                                  IsEnabled="{ReflectionBinding #AccentCustom.IsChecked}"
                                  VerticalAlignment="Center"
                                  IsMoreButtonVisible="True"
                                  UseSpectrum="True"
                                  UseColorWheel="False"
                                  UseColorTriangle="False"
                                  UseColorPalette="False"
                                  IsCompact="True"
                                  ShowAcceptDismissButtons="True"
                                  Color="{ReflectionBinding Source={x:Static ms:UISettings.ThemeAccent},Converter={StaticResource ColorStringToBrush},Path=Value, Mode=TwoWay}"/>
          </StackPanel>
        </DockPanel>
      </Border>


      <Border Classes="Item">
        <DockPanel>
          <StackPanel VerticalAlignment="Center">
            <TextBlock Text="{ReflectionBinding Path=Res.Settings_Theme,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
            <!--<TextBlock Classes="prompt"
                         Text="{ReflectionBinding Path=Res.Settings_RestartEffective,Mode=OneWay,Source={x:Static resx:R.Current}}"/>-->
          </StackPanel>
          <ComboBox x:Name="Themes"
                    SelectedIndex="{Binding Source={x:Static ms:UISettings.Theme},Path=Value, Mode=TwoWay}">
            <ComboBoxItem Content="{ReflectionBinding Path=Res.Settings_UI_SystemDefault,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
            <ComboBoxItem Content="{ReflectionBinding Path=Res.Settings_UI_Light,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
            <ComboBoxItem Content="{ReflectionBinding Path=Res.Settings_UI_Dark,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
            <!--<ComboBoxItem Content="{ReflectionBinding Path=Res.Settings_UI_HighContrast,Mode=OneWay,Source={x:Static resx:R.Current}}"/>-->
          </ComboBox>
        </DockPanel>
      </Border>

      <Separator Classes="Separator"/>


      <Border Classes="Item">
        <DockPanel>
          <TextBlock Text="{ReflectionBinding Path=Res.Settings_Language,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
          <ComboBox SelectedItem="{Binding SelectLanguage, Mode=TwoWay}"
                    Items="{x:Static resx:R.Languages}" >
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Value,Mode=OneWay}"></TextBlock>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </ComboBox>
        </DockPanel>
      </Border>

      <Border Classes="Item">
        <DockPanel>
          <TextBlock Text="{ReflectionBinding Path=Res.Settings_Fonts,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
          <ComboBox
                    Items="{Binding Mode=OneWay,Source={x:Static resx:R.Fonts}}"
                    SelectedItem="{Binding SelectFont}"
                    AutoScrollToSelectedItem="True"
                    MaxDropDownHeight="300">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Key,Mode=OneWay}"
                           FontFamily="{Binding Value,Mode=OneWay,Converter={StaticResource NameToFontFamilyConverter}}"/>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </ComboBox>
        </DockPanel>
      </Border>

      <!--<DockPanel>
        <TextBlock Text="{ReflectionBinding Path=Res.Settings_UI_EnableFilletUI,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
        <ToggleSwitch IsChecked="{ReflectionBinding Source={x:Static ms:UISettings.EnableFilletUI},Path=Value, Mode=TwoWay}"/>
      </DockPanel>-->

      <Separator Classes="Separator"/>

      <Border Classes="Item">
        <DockPanel>
          <TextBlock Text="{ReflectionBinding Path=Res.Settings_UI_WindowTransparencyMaterial,Mode=OneWay,Source={x:Static resx:R.Current}}"/>

          <ComboBox SelectedIndex="{Binding Source={x:Static ms:UISettings.WindowBackgroundMateria},Path=Value, Mode=TwoWay}">
            <ComboBoxItem Content="None"/>
            <ComboBoxItem Content="Transparent"/>
            <ComboBoxItem Content="Blur"/>
            <ComboBoxItem Content="AcrylicBlur"/>
            <ComboBoxItem Content="ForceAcrylicBlur"/>
            <ComboBoxItem Content="Mica" IsVisible="{markup:OnPlatform Windows11AtLeast}"/>
          </ComboBox>
        </DockPanel>
      </Border>

      <Border Classes="Item" IsVisible="{markup:OnPlatform Windows}">
        <DockPanel>
          <StackPanel>
            <TextBlock Text="{ReflectionBinding Path=Res.Settings_UI_EnableDesktopBackground,Source={x:Static resx:R.Current},Mode=OneWay}"/>
            <TextBlock Classes="prompt"
                       Text="{ReflectionBinding Path=Res.Settings_UI_EnableDesktopBackground_Tip,Source={x:Static resx:R.Current},Mode=OneWay}">
            </TextBlock>
          </StackPanel>
          <ToggleSwitch IsChecked="{ReflectionBinding Source={x:Static ms:UISettings.EnableDesktopBackground},Path=Value, Mode=TwoWay}"/>
        </DockPanel>
      </Border>

      <Border Classes="Item">
        <DockPanel>
          <TextBlock Text="{ReflectionBinding Path=Res.Settings_UI_AcrylicTransparency,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
          <Slider Value="{ReflectionBinding Value,Source={x:Static ms:UISettings.AcrylicOpacity},Mode=TwoWay}" Minimum="0" Maximum="1.0"/>
        </DockPanel>
      </Border>

      <Expander>
        <Expander.Header>
          <DockPanel HorizontalAlignment="Stretch">
            <TextBlock Text="{ReflectionBinding Path=Res.Settings_UI_CustomBackgroundImage,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
            <ToggleSwitch IsChecked="{ReflectionBinding Source={x:Static ms:UISettings.EnableCustomBackgroundImage},Path=Value, Mode=TwoWay}"/>
          </DockPanel>
        </Expander.Header>
        <StackPanel Orientation="Horizontal"
                    Spacing="10">
          <Image Source="{ReflectionBinding Source={x:Static ms:UISettings.BackgroundImagePath},Path=Value, Mode=OneWay,Converter={StaticResource BitmapAssetValueConverter}}"
                 Stretch="UniformToFill"
                 Width="250"
                 Height="150"/>
          <Button Content="{ReflectionBinding Path=Res.Settings_UI_SelectImage,Mode=OneWay,Source={x:Static resx:R.Current}}"
                  Command="{Binding SelectImage_Click}"></Button>
          <Button Content="{ReflectionBinding Path=Res.Reset,Mode=OneWay,Source={x:Static resx:R.Current}}"
                  Command="{Binding ResetImage_Click}"></Button>
        </StackPanel>
      </Expander>

      <Separator Classes="Separator"/>

      <Border Classes="Item"
              IsEnabled="{ReflectionBinding Path=User,Mode=OneWay,Source={x:Static service:UserService.Current},Converter={StaticResource IsNullConverter},ConverterParameter=invert}">
        <DockPanel IsEnabled="{ReflectionBinding Path=User.UserType,Mode=OneWay,Source={x:Static service:UserService.Current},Converter={StaticResource EnumEqualValueConverter},ConverterParameter={x:Static app:UserType.Sponsor}}">
          <StackPanel>
            <TextBlock Text="{ReflectionBinding Path=Res.Advertisement_NoShow,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
            <TextBlock Classes="prompt"
                       Text="{ReflectionBinding Path=Res.Advertisement_NoShow_Tip,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
          </StackPanel>

          <ToggleSwitch IsChecked="{ReflectionBinding Source={x:Static ms:UISettings.IsShowAdvertise},Path=!Value, Mode=TwoWay}"/>
        </DockPanel>
      </Border>
    </StackPanel>
  </ScrollViewer>
</UserControl>
