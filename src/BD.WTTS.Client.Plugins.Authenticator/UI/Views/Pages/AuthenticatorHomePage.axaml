<spp:PageBase
    x:Class="BD.WTTS.UI.Views.Pages.AuthenticatorHomePage"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://steampp.net/services"
    xmlns:spp="https://steampp.net/ui"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    Title="{ReflectionBinding Name,
                              Source={x:Static s:Plugin.Instance},
                              Mode=OneWay}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:CompileBindings="True"
    x:DataType="spp:AuthenticatorHomePageViewModel"
    Description="{ReflectionBinding Description,
                                    Source={x:Static s:Plugin.Instance},
                                    Mode=OneWay}"
    Subtitle="{ReflectionBinding Author,
                                 Source={x:Static s:Plugin.Instance},
                                 Mode=OneWay,
                                 Converter={StaticResource StringFormatConverter},
                                 ConverterParameter=Plugin_Author}"
    mc:Ignorable="d">
    <spp:PageBase.PreviewImage>
        <ui:ImageIconSource Source="{ReflectionBinding Icon, Source={x:Static s:Plugin.Instance}, Mode=OneWay, Converter={StaticResource BitmapAssetValueConverter}}" />
    </spp:PageBase.PreviewImage>
    <spp:PageBase.ActionContent>
        <StackPanel Orientation="Horizontal" Spacing="2">
            <Button
                Padding="8,4"
                Command="{Binding ShowAddWindow}"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Add" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{ReflectionBinding Path=Res.Add,
                                                 Mode=OneWay,
                                                 Source={x:Static s:ResourceService.Current}}" />
                </Panel>
            </Button>
            <Button
                Padding="8,4"
                Command="{Binding SyncAuthenticators}"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Sync" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{ReflectionBinding Path=Res.LocalAuth_CloudSync,
                                                 Mode=OneWay,
                                                 Source={x:Static s:ResourceService.Current}}" />
                </Panel>
            </Button>
            <Button
                Padding="8,4"
                Command="{Binding Initialize}"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Refresh" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{ReflectionBinding Path=Res.Refresh,
                                                 Mode=OneWay,
                                                 Source={x:Static s:ResourceService.Current}}" />
                </Panel>
            </Button>
            <ToggleButton
                Padding="8,4"
                DockPanel.Dock="Right"
                IsChecked="{Binding $parent[spp:PageBase].IsPaneOpen, Mode=TwoWay}"
                Theme="{StaticResource TransparentToggleButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Settings" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{ReflectionBinding Path=Res.Settings_Auth,
                                                 Mode=OneWay,
                                                 Source={x:Static s:ResourceService.Current}}" />
                </Panel>
            </ToggleButton>
            <DropDownButton
                Padding="8"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="{StaticResource More}"
                FontFamily="{StaticResource SymbolThemeFontFamily}"
                FontSize="20"
                Theme="{StaticResource TransparentButton}">
                <DropDownButton.Flyout>
                    <ui:FAMenuFlyout Placement="BottomEdgeAlignedRight">
                        <!-- <ui:MenuFlyoutSubItem Text="令牌加密"> -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding SetPasswordProtection}"  -->
                        <!--  IsEnabled="{Binding !HasPasswordEncrypt}"  -->
                        <!--  Text="添加密码保护" />  -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding RemovePasswordProtection}"  -->
                        <!--  IsEnabled="{Binding HasPasswordEncrypt}"  -->
                        <!--  Text="移除密码保护" />  -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding ToggleLocalProtection}"  -->
                        <!--  IsEnabled="{Binding !HasLocalPcEncrypt}"  -->
                        <!--  Text="添加机器验证" />  -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding ToggleLocalProtection}"  -->
                        <!--  IsEnabled="{Binding HasLocalPcEncrypt}"  -->
                        <!--  Text="移除机器验证" />  -->
                        <!--     <ui:MenuFlyoutItem Command="{Binding EncryptHelp}" Text="加密帮助" /> -->
                        <!-- </ui:MenuFlyoutSubItem> -->
                        <ui:MenuFlyoutItem Command="{Binding OpenExportWindow}" Text="{ReflectionBinding Path=Res.ExportAll, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <!--<ui:MenuFlyoutItem
                            Command="{Binding ReLockAuthenticator}"
                            IsEnabled="{Binding IsVerificationPass}"
                            Text="{ReflectionBinding Path=Res.Auth_lock,
                                                     Mode=OneWay,
                                                     Source={x:Static s:ResourceService.Current}}" />-->
                        <ui:MenuFlyoutItem Command="{Binding ShowRecoverWindow}" Text="{ReflectionBinding Path=Res.Auth_Sync_Recover, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem Command="{Binding ResetIndependentPassword}" Text="{ReflectionBinding Path=Res.Auth_Sync_ResetPassword, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.Settings_Plugin, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutSeparator />
                        <ui:MenuFlyoutItem IsEnabled="False" Text="{ReflectionBinding Path=Res.Auth_Version, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.ViewInStore, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.UseHelp, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                        <ui:MenuFlyoutItem Text="{ReflectionBinding Path=Res.AboutThisPlugin, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                    </ui:FAMenuFlyout>
                </DropDownButton.Flyout>
            </DropDownButton>
        </StackPanel>
    </spp:PageBase.ActionContent>

    <spp:PageBase.PaneContent>
        <StackPanel Margin="15,20" Spacing="10">
            <TextBlock Text="{ReflectionBinding Path=Res.EncryptSettings, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" Theme="{StaticResource BodyStrongTextBlockStyle}" />

            <Button
                Command="{Binding ReLockAuthenticator}"
                Content="{ReflectionBinding Path=Res.Auth_lock,
                                            Mode=OneWay,
                                            Source={x:Static s:ResourceService.Current}}"
                IsEnabled="{Binding IsVerificationPass}" />
            <Button
                Command="{Binding SetPasswordProtection}"
                Content="{ReflectionBinding Path=Res.Auth_AddPasswordProtect,
                                            Mode=OneWay,
                                            Source={x:Static s:ResourceService.Current}}"
                IsEnabled="{Binding !HasPasswordEncrypt}" />
            <Button
                Command="{Binding RemovePasswordProtection}"
                Content="{ReflectionBinding Path=Res.Auth_RemovePasswordProtect,
                                            Mode=OneWay,
                                            Source={x:Static s:ResourceService.Current}}"
                IsEnabled="{Binding HasPasswordEncrypt}" />
            <Button
                Command="{Binding ToggleLocalProtection}"
                Content="{ReflectionBinding Path=Res.Auth_AddMachineValidation,
                                            Mode=OneWay,
                                            Source={x:Static s:ResourceService.Current}}"
                IsEnabled="{Binding !HasLocalPcEncrypt}" />
            <Button
                Command="{Binding ToggleLocalProtection}"
                Content="{ReflectionBinding Path=Res.Auth_RemoveMachineValidation,
                                            Mode=OneWay,
                                            Source={x:Static s:ResourceService.Current}}"
                IsEnabled="{Binding HasLocalPcEncrypt}" />
            <Button Command="{Binding EncryptHelp}" Content="{ReflectionBinding Path=Res.Auth_EncryptionHelp, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
        </StackPanel>
    </spp:PageBase.PaneContent>
    <Panel>
        <StackPanel
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Orientation="Horizontal"
            Spacing="5">
            <StackPanel.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="!IsVerificationPass" />
                    <Binding Path="!AuthenticatorIsEmpty" />
                </MultiBinding>
            </StackPanel.IsVisible>
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="{ReflectionBinding Path=Res.Auth_PasswordProtectedVerifyFirst,
                                         Mode=OneWay,
                                         Source={x:Static s:ResourceService.Current}}"
                TextWrapping="WrapWithOverflow" />
            <Button
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{Binding Initialize}"
                Content="{ReflectionBinding Path=Res.Verify,
                                            Mode=OneWay,
                                            Source={x:Static s:ResourceService.Current}}"
                IsEnabled="True" />
        </StackPanel>

        <spp:ContentLoader IsLoading="{Binding IsLoading}" IsShowNoResultText="{Binding AuthenticatorIsEmpty}">
            <spp:ContentLoader.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="IsVerificationPass" />
                    <Binding Path="!AuthenticatorIsEmpty" />
                </MultiBinding>
            </spp:ContentLoader.IsVisible>
            <spp:ContentLoader.NoResultMessage>
                <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="5">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{ReflectionBinding Source={x:Static s:ResourceService.Current},
                                                 Path=Res.LocalAuth_NoAuthTip,
                                                 Mode=OneWay}"
                        TextWrapping="Wrap" />
                </StackPanel>
            </spp:ContentLoader.NoResultMessage>
            <ItemsRepeater ItemsSource="{Binding Auths}">
                <ItemsRepeater.Layout>
                    <UniformGridLayout
                        ItemsJustification="Start"
                        ItemsStretch="Uniform"
                        MinColumnSpacing="10"
                        MinItemHeight="150"
                        MinRowSpacing="10" />
                </ItemsRepeater.Layout>
                <ItemsRepeater.ItemTemplate>
                    <DataTemplate DataType="{x:Type spp:AuthenticatorItemModel}">
                        <spp:AuthenticatorItem>
                            <spp:AuthenticatorItem.ContextFlyout>
                                <MenuFlyout>
                                    <MenuItem
                                        Command="{ReflectionBinding $parent[spp:PageBase].DataContext.AuthenticatorIndexMoveUp}"
                                        CommandParameter="{Binding}"
                                        Header="{ReflectionBinding Path=Res.Up,
                                                                   Mode=OneWay,
                                                                   Source={x:Static s:ResourceService.Current}}">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="ChevronUp" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{ReflectionBinding $parent[spp:PageBase].DataContext.AuthenticatorIndexMoveDown}"
                                        CommandParameter="{Binding}"
                                        Header="{ReflectionBinding Path=Res.MoveDown,
                                                                   Mode=OneWay,
                                                                   Source={x:Static s:ResourceService.Current}}">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="ChevronDown" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{ReflectionBinding $parent[spp:PageBase].DataContext.AuthenticatorIndexSticky}"
                                        CommandParameter="{Binding}"
                                        Header="{ReflectionBinding Path=Res.FixedTop,
                                                                   Mode=OneWay,
                                                                   Source={x:Static s:ResourceService.Current}}">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="Pin" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{ReflectionBinding $parent[spp:PageBase].DataContext.DefaultExport}"
                                        CommandParameter="{Binding}"
                                        Header="{ReflectionBinding Path=Res.DefaultExport,
                                                                   Mode=OneWay,
                                                                   Source={x:Static s:ResourceService.Current}}">
                                        <MenuItem.Icon>
                                            <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEDE1;" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{ReflectionBinding $parent[spp:PageBase].DataContext.ExportAuthWithSdaFile}"
                                        CommandParameter="{Binding}"
                                        Header="{ReflectionBinding Path=Res.Auth_ExportmaFile,
                                                                   Mode=OneWay,
                                                                   Source={x:Static s:ResourceService.Current}}">
                                        <MenuItem.Icon>
                                            <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEDE1;" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{ReflectionBinding $parent[spp:PageBase].DataContext.UnbindingSteamAuthAsync}"
                                        CommandParameter="{Binding}"
                                        Header="{ReflectionBinding Path=Res.LocalAuth_RemoveAuth,
                                                                   Mode=OneWay,
                                                                   Source={x:Static s:ResourceService.Current}}">
                                        <MenuItem.Icon>
                                            <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xECC9;" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{ReflectionBinding $parent[spp:PageBase].DataContext.DeleteAuthAsync}"
                                        CommandParameter="{Binding}"
                                        Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                                        Header="{ReflectionBinding Path=Res.LocalAuth_Delete,
                                                                   Mode=OneWay,
                                                                   Source={x:Static s:ResourceService.Current}}">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="Delete" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </MenuFlyout>
                            </spp:AuthenticatorItem.ContextFlyout>
                        </spp:AuthenticatorItem>
                    </DataTemplate>
                </ItemsRepeater.ItemTemplate>
            </ItemsRepeater>
        </spp:ContentLoader>
    </Panel>
</spp:PageBase>