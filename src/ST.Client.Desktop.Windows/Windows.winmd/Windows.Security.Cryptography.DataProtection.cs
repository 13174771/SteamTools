// This file was generated by cswinrt.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Windows.Security.Cryptography.DataProtection
{
    [global::WinRT.WindowsRuntimeType("Windows")]

    [global::WinRT.ProjectedRuntimeClass(nameof(_default))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    public sealed class DataProtectionProvider : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<DataProtectionProvider>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;
        private readonly Lazy<IDataProtectionProvider> _defaultLazy;
        private readonly Dictionary<Type, object> _lazyInterfaces;

        private IDataProtectionProvider _default => _defaultLazy.Value;

        public DataProtectionProvider() : this((ActivationFactory<DataProtectionProvider>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        internal class _IDataProtectionProviderFactory : IWinRTObject
        {
            private IObjectReference _obj;
            private IntPtr ThisPtr => _obj.ThisPtr;
            public _IDataProtectionProviderFactory()
            {
                _obj = ActivationFactory<DataProtectionProvider>.As(GuidGenerator.GetIID(typeof(Windows.Security.Cryptography.DataProtection.IDataProtectionProviderFactory).GetHelperType()));
            }

            private static WeakLazy<_IDataProtectionProviderFactory> _instance = new WeakLazy<_IDataProtectionProviderFactory>();
            internal static _IDataProtectionProviderFactory Instance => _instance.Value;

            IObjectReference IWinRTObject.NativeObject => _obj;
            bool IWinRTObject.HasUnwrappableNativeObject => false;
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache { get; } = new();
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData { get; } = new();


            public unsafe IntPtr CreateOverloadExplicit(string protectionDescriptor)
            {
                MarshalString __protectionDescriptor = default;
                IntPtr __retval = default;
                try
                {
                    __protectionDescriptor = MarshalString.CreateMarshaler(protectionDescriptor);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(__protectionDescriptor), out __retval));
                    return __retval;
                }
                finally
                {
                    MarshalString.DisposeMarshaler(__protectionDescriptor);
                }
            }

        }

        public DataProtectionProvider(string protectionDescriptor) : this(((Func<IObjectReference>)(() => {
            IntPtr ptr = (_IDataProtectionProviderFactory.Instance.CreateOverloadExplicit(protectionDescriptor));
            try
            {
                return (ComWrappersSupport.GetObjectReferenceForInterface(ptr));
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(ptr);
            }
        }))())
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        public static DataProtectionProvider FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<DataProtectionProvider>.FromAbi(thisPtr);
        }

        internal DataProtectionProvider(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IDataProtectionProvider).GetHelperType()));
            _defaultLazy = new Lazy<IDataProtectionProvider>(() => (IDataProtectionProvider)new SingleInterfaceOptimizedObject(typeof(IDataProtectionProvider), _inner));
            _lazyInterfaces = new Dictionary<Type, object>()
            {
            };
        }

        public static bool operator ==(DataProtectionProvider x, DataProtectionProvider y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(DataProtectionProvider x, DataProtectionProvider y) => !(x == y);
        public bool Equals(DataProtectionProvider other) => this == other;
        public override bool Equals(object obj) => obj is DataProtectionProvider that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();

        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        global::System.Collections.Concurrent.ConcurrentDictionary<global::System.RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache { get; } = new();
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData { get; } = new();

        private struct InterfaceTag<I>{};

        private IDataProtectionProvider AsInternal(InterfaceTag<IDataProtectionProvider> _) => _default;

        public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> ProtectAsync(global::Windows.Storage.Streams.IBuffer data) => _default.ProtectAsync(data);

        public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> UnprotectAsync(global::Windows.Storage.Streams.IBuffer data) => _default.UnprotectAsync(data);

        public global::Windows.Foundation.IAsyncAction ProtectStreamAsync(global::Windows.Storage.Streams.IInputStream src, global::Windows.Storage.Streams.IOutputStream dest) => _default.ProtectStreamAsync(src, dest);

        public global::Windows.Foundation.IAsyncAction UnprotectStreamAsync(global::Windows.Storage.Streams.IInputStream src, global::Windows.Storage.Streams.IOutputStream dest) => _default.UnprotectStreamAsync(src, dest);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || typeof(global::WinRT.IInspectable).GUID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs<IUnknownVftbl>(iid, out ObjectReference<IUnknownVftbl> objRef) >= 0)
            {
                using (objRef)
                {
                    ppv = objRef.GetRef();
                    return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
                }
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows")]
    [Guid("09639948-ED22-4270-BD1C-6D72C00F8787")]
    [Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IDataProtectionProvider
    {
        global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> ProtectAsync(global::Windows.Storage.Streams.IBuffer data);
        global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> UnprotectAsync(global::Windows.Storage.Streams.IBuffer data);
        global::Windows.Foundation.IAsyncAction ProtectStreamAsync(global::Windows.Storage.Streams.IInputStream src, global::Windows.Storage.Streams.IOutputStream dest);
        global::Windows.Foundation.IAsyncAction UnprotectStreamAsync(global::Windows.Storage.Streams.IInputStream src, global::Windows.Storage.Streams.IOutputStream dest);
    }
    [global::WinRT.WindowsRuntimeType("Windows")]
    [Guid("ADF33DAC-4932-4CDF-AC41-7214333514CA")]
    [Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IDataProtectionProviderFactory
    {
        DataProtectionProvider CreateOverloadExplicit(string protectionDescriptor);
    }
}

#pragma warning disable CA1416
namespace ABI.Windows.Security.Cryptography.DataProtection
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct DataProtectionProvider
    {
        public static IObjectReference CreateMarshaler(global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider obj) => obj is null ? null : MarshalInspectable<global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider>.CreateMarshaler(obj).As<IUnknownVftbl>(GuidGenerator.GetIID(typeof(global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider FromAbi(IntPtr thisPtr) => global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider obj) => obj is null ? IntPtr.Zero : CreateMarshaler(obj).GetRef();
        public static unsafe MarshalInterfaceHelper<global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider>.MarshalerArray CreateMarshalerArray(global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider[] array) => MarshalInterfaceHelper<global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider>.CreateMarshalerArray(array, (o) => CreateMarshaler(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider>.GetAbiArray(box);
        public static unsafe global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider[] array) => MarshalInterfaceHelper<global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [DynamicInterfaceCastableImplementation]
    [Guid("09639948-ED22-4270-BD1C-6D72C00F8787")]
    internal unsafe interface IDataProtectionProvider : global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe IDataProtectionProvider()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IDataProtectionProvider), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 4);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_ProtectAsync_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_UnprotectAsync_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_ProtectStreamAsync_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_UnprotectStreamAsync_3;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ProtectAsync_0(IntPtr thisPtr, IntPtr data, IntPtr* value)
        {
            global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider>(thisPtr).ProtectAsync(MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(data));
                *value = MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer>>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_UnprotectAsync_1(IntPtr thisPtr, IntPtr data, IntPtr* value)
        {
            global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider>(thisPtr).UnprotectAsync(MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(data));
                *value = MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer>>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_ProtectStreamAsync_2(IntPtr thisPtr, IntPtr src, IntPtr dest, IntPtr* value)
        {
            global::Windows.Foundation.IAsyncAction __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider>(thisPtr).ProtectStreamAsync(MarshalInterface<global::Windows.Storage.Streams.IInputStream>.FromAbi(src), MarshalInterface<global::Windows.Storage.Streams.IOutputStream>.FromAbi(dest));
                *value = MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_UnprotectStreamAsync_3(IntPtr thisPtr, IntPtr src, IntPtr dest, IntPtr* value)
        {
            global::Windows.Foundation.IAsyncAction __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider>(thisPtr).UnprotectStreamAsync(MarshalInterface<global::Windows.Storage.Streams.IInputStream>.FromAbi(src), MarshalInterface<global::Windows.Storage.Streams.IOutputStream>.FromAbi(dest));
                *value = MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider.ProtectAsync(global::Windows.Storage.Streams.IBuffer data)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider).TypeHandle));
            var ThisPtr = _obj.ThisPtr;

            IObjectReference __data = default;
            IntPtr __retval = default;
            try
            {
                __data = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler(data);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInterface<global::Windows.Storage.Streams.IBuffer>.GetAbi(__data), out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeMarshaler(__data);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer>>.DisposeAbi(__retval);
            }
        }

        unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider.UnprotectAsync(global::Windows.Storage.Streams.IBuffer data)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider).TypeHandle));
            var ThisPtr = _obj.ThisPtr;

            IObjectReference __data = default;
            IntPtr __retval = default;
            try
            {
                __data = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler(data);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInterface<global::Windows.Storage.Streams.IBuffer>.GetAbi(__data), out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeMarshaler(__data);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer>>.DisposeAbi(__retval);
            }
        }

        unsafe global::Windows.Foundation.IAsyncAction global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider.ProtectStreamAsync(global::Windows.Storage.Streams.IInputStream src, global::Windows.Storage.Streams.IOutputStream dest)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider).TypeHandle));
            var ThisPtr = _obj.ThisPtr;

            IObjectReference __src = default;
            IObjectReference __dest = default;
            IntPtr __retval = default;
            try
            {
                __src = MarshalInterface<global::Windows.Storage.Streams.IInputStream>.CreateMarshaler(src);
                __dest = MarshalInterface<global::Windows.Storage.Streams.IOutputStream>.CreateMarshaler(dest);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInterface<global::Windows.Storage.Streams.IInputStream>.GetAbi(__src), MarshalInterface<global::Windows.Storage.Streams.IOutputStream>.GetAbi(__dest), out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IInputStream>.DisposeMarshaler(__src);
                MarshalInterface<global::Windows.Storage.Streams.IOutputStream>.DisposeMarshaler(__dest);
                MarshalInterface<global::Windows.Foundation.IAsyncAction>.DisposeAbi(__retval);
            }
        }

        unsafe global::Windows.Foundation.IAsyncAction global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider.UnprotectStreamAsync(global::Windows.Storage.Streams.IInputStream src, global::Windows.Storage.Streams.IOutputStream dest)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Windows.Security.Cryptography.DataProtection.IDataProtectionProvider).TypeHandle));
            var ThisPtr = _obj.ThisPtr;

            IObjectReference __src = default;
            IObjectReference __dest = default;
            IntPtr __retval = default;
            try
            {
                __src = MarshalInterface<global::Windows.Storage.Streams.IInputStream>.CreateMarshaler(src);
                __dest = MarshalInterface<global::Windows.Storage.Streams.IOutputStream>.CreateMarshaler(dest);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInterface<global::Windows.Storage.Streams.IInputStream>.GetAbi(__src), MarshalInterface<global::Windows.Storage.Streams.IOutputStream>.GetAbi(__dest), out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IInputStream>.DisposeMarshaler(__src);
                MarshalInterface<global::Windows.Storage.Streams.IOutputStream>.DisposeMarshaler(__dest);
                MarshalInterface<global::Windows.Foundation.IAsyncAction>.DisposeAbi(__retval);
            }
        }
    }

    [DynamicInterfaceCastableImplementation]
    [Guid("ADF33DAC-4932-4CDF-AC41-7214333514CA")]
    internal unsafe interface IDataProtectionProviderFactory : global::Windows.Security.Cryptography.DataProtection.IDataProtectionProviderFactory
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe IDataProtectionProviderFactory()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IDataProtectionProviderFactory), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_CreateOverloadExplicit_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_CreateOverloadExplicit_0(IntPtr thisPtr, IntPtr protectionDescriptor, IntPtr* value)
        {
            global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::Windows.Security.Cryptography.DataProtection.IDataProtectionProviderFactory>(thisPtr).CreateOverloadExplicit(MarshalString.FromAbi(protectionDescriptor));
                *value = global::ABI.Windows.Security.Cryptography.DataProtection.DataProtectionProvider.FromManaged(__value);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::Windows.Security.Cryptography.DataProtection.DataProtectionProvider global::Windows.Security.Cryptography.DataProtection.IDataProtectionProviderFactory.CreateOverloadExplicit(string protectionDescriptor)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::Windows.Security.Cryptography.DataProtection.IDataProtectionProviderFactory).TypeHandle));
            var ThisPtr = _obj.ThisPtr;

            MarshalString __protectionDescriptor = default;
            IntPtr __retval = default;
            try
            {
                __protectionDescriptor = MarshalString.CreateMarshaler(protectionDescriptor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(__protectionDescriptor), out __retval));
                return global::ABI.Windows.Security.Cryptography.DataProtection.DataProtectionProvider.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeMarshaler(__protectionDescriptor);
                global::ABI.Windows.Security.Cryptography.DataProtection.DataProtectionProvider.DisposeAbi(__retval);
            }
        }
    }

}
#pragma warning restore CA1416
