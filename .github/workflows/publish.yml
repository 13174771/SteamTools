name: SteamTools Publish

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  publish:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        configuration: [ Release ]
        os: [ windows-latest ]
      # os: [ windows-latest, macOS-latest, ubuntu-latest ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Install macOS SDK(macOS)
      if: matrix.os == 'macOS-latest'
      run: sudo dotnet workload install macos
      
    - name: Install macOS SDK(Windows)
      if: matrix.os == 'windows-latest'
      run: dotnet workload install macos

    - name: Install Maui(Windows)
      if: matrix.os == 'windows-latest'
      run: dotnet workload install maui

    - name: Verify dotnet info
      run: dotnet --info

    - name: dotnet restore SteamToolsV2+.sln
      if: matrix.os == 'windows-latest'
      run: dotnet restore ./SteamToolsV2+.sln
      
    - name: dotnet restore SteamToolsV2+.Linux.sln
      if: matrix.os == 'ubuntu-latest'
      run: dotnet restore ./SteamToolsV2+.Linux.slnf
      
    - name: dotnet restore SteamToolsV2+.Mac.sln
      if: matrix.os == 'macOS-latest'
      run: dotnet restore ./SteamToolsV2+.Mac.slnf
      
    - name: Build AvaloniaApp ${{ matrix.configuration }}
      run: dotnet build ./src/ST.Client.Desktop.Avalonia.App/ST.Client.Avalonia.App.csproj -c "${{ matrix.configuration }}"
      
    - name: Run CommonUnit
      run: dotnet test ./tests/Common.UnitTest/Common.UnitTest.csproj -c "${{ matrix.configuration }}"

    - name: Run ST.Client.UnitTest
      run: dotnet test ./tests/ST.Client.UnitTest/ST.Client.UnitTest.csproj -c "${{ matrix.configuration }}"
